{"version":3,"sources":["containers/Canvas.js","containers/ShapeContainer.js","components/InputField.js","components/SettingsForm.js","components/DoubleInput.js","utils/angleFunctions.js","components/RangeHandlebars.js","utils/arrayFunctions.js","components/RadialControl.js","containers/ObstacleContainer.js","components/ScoreCounter.js","components/ModeSelector.js","components/App.js","utils/fragment.js","utils/stageSetup.js","utils/collisions.js","levels/levels.js","reducers/shapeReducer.js","serviceWorker.js","index.js"],"names":["Canvas","handlePlantSeed","_this","props","resetRoot","handleCreateShape","createNodes","_this2","this","intId","setInterval","setTimeout","console","log","nodes","clearInterval","stage","zoom","window","innerWidth","innerHeight","styles","position","left","top","width","height","transform","concat","react_default","a","createElement","className","id","style","map","currentShape","i","Fragment","offset","stop-color","cx","coordX","cy","coordY","r","radius","Component","ShapeContainer","connect","state","viewportDims","settings","leaves","dispatch","type","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loopCreatAnimation","timestamp","length","frame","requestAnimationFrame","cancelAnimationFrame","animating","toggleAnimation","borderRadius","background","color","key","onClick","InputField","_this$props","propName","propLabel","propValue","propMin","propMax","fieldChange","formSubmit","min","max","value","onChange","e","target","onMouseUp","SettingsForm","handleFormChange","targetProp","undefined","setState","defineProperty","angleRange","handleFormSubmission","preventDefault","updateSettings","bind","assertThisInitialized","prevProps","onSubmit","components_InputField","minSize","anglePrecision","decay","decayPrecision","visibility","settingsObj","radToDeg","angle","Math","round","PI","degToRad","RangeHandlebars","fromRangeToAngle","deg","parseFloat","rad","fromAngleToRange","newRanges","toggleHover","hover","onMouseDown","button","dragging","stopPropagation","mouseQuad","onMouseMove","deltaY","pageY","center","deltaX","pageX","newAngleInRad","atan","minMax","abs","updateStates","ang","handleChange","handle","objectSpread","pos","x","y","document","addEventListener","removeEventListener","componentClasses","transformOrigin","textAlign","display","flexDirection","justifyContent","alignItems","paddingRight","onMouseEnter","onMouseLeave","index_es","icon","faCaretUp","faCaretDown","flatten","arr","val","reduce","acc","pluck","item","RadialControl","calcAllMinMax","flatArr","boundArr","mmArr","currentValue","currentIndex","prevIndex","nextIndex","floor","pad","assign","apply","toConsumableArray","createPieData","initial","currentRange","allRanges","nextRangeStart","sectionData","title","emptyValue","maxAngleRanges","rootAngle","angleRanges","initAngle","controllerRadius","components_RangeHandlebars","dist_default","data","segmentsStyle","transition","startAngle","totalValue","lineWidth","ObstacleContainer","obstacles","currentObstacle","targets","currentTarget","ScoreCounter","handleClick","getWinningPath","ModeSelector","handleclick","changeGameMode","_ref","gameMode","faFlask","faBullseye","App","updateWindowDimensions","updateViewport","containers_ObstacleContainer","containers_ShapeContainer","components_ModeSelector","components_ScoreCounter","components_RadialControl","components_SettingsForm","viewportObj","createFragmentedArray","parentsArr","allChildrenArray","currentParent","index","parent","myAngle","mySize","myRange","currentChildrenArray","myDistance","siblingCounter","rangeSizeArr","calcRangeSize","remainder","totalizeAngleRange","randomSpread","multiplier","multiplierPrecision","random","myAngleSpan","push","distance","cos","sin","distributeParentValue","originalValue","percentOfOriginal","precision","spread","direction","randomizer","angleArr","currentRangeArr","totalAngleArr","partial_sum","offlineTest","testSettings","newNodes","newLeaves","time","Array","prototype","timeEnd","calcNewZoom","viewport","allX","allY","maxX","minX","maxY","minY","newZoom","trunc","doesCircleIntersectSegment","vertex1","vertex2","distanceBetweenPoints","xx","yy","x1","y1","x2","y2","C","D","dot","len_sq","sqr","param","dx","dy","sqrt","distanceToSegment","point1","point2","doLeavesIntersectObstacles","status","currentLeaf","j","nextVert","modLeaf","levelStates","0","rootCoords","rootSize","1","2","initialState","level","shapeReducer","newLevel","arguments","action","slice","newSettings","newViewportDims","newStage","newGameMode","rootZero","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.21e76408.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Canvas extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.handlePlantSeed()\r\n\t\tconst intId = setInterval(() => {\r\n\t\t\tthis.handleCreateShape()\r\n\t\t}, 50)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log('cleared, final state:', this.props.nodes)\r\n\t\t\tclearInterval(intId)\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\thandlePlantSeed = () => {\r\n\t\tthis.props.resetRoot()\r\n\t}\r\n\r\n\thandleCreateShape = () => {\r\n\t\tthis.props.createNodes()\r\n\t}\r\n\r\n\t// render() {\r\n\t// \tconst viewBox = [\r\n\t// \t\t0,\r\n\t// \t\t0,\r\n\t// \t\twindow.innerWidth,\r\n\t// \t\twindow.innerHeight\r\n\t// \t]\r\n\t// \tconst style = {\r\n\t// \t\tborder: '1px solid black'\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<svg id='spawn-canvas' style={style} viewBox={viewBox}>\r\n\t// \t\t\t<circle cx={150} cy={500} r={50} />\r\n\t// \t\t</svg>\r\n\t// \t)\r\n\t// }\r\n\trender() {\r\n\t\tconsole.log('zoom', this.props.stage.zoom)\r\n\t\tconst viewBox = [window.innerWidth / 2, 100 - window.innerHeight, window.innerWidth, window.innerHeight]\r\n\t\tconst styles = {\r\n\t\t\tposition: 'relative',\r\n\t\t\tleft: 0,\r\n\t\t\ttop: 0,\r\n\t\t\twidth: window.innerWidth,\r\n\t\t\theight: window.innerHeight,\r\n\t\t\ttransform: `scale(${this.props.stage.zoom})`\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<svg className='stage' id='spawn-canvas' style={styles}>\r\n\t\t\t\t{this.props.nodes.map((currentShape, i) => {\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\t// fill: 'radial-gradient(rgba(210, 77, 87, 0.1),rgba(210, 77, 87, 0.2) , rgba(210, 77, 87, 0.8))'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t\t\t<radialGradient id='exampleGradient'>\r\n\t\t\t\t\t\t\t\t\t<stop offset='10%' stop-color='gold' />\r\n\t\t\t\t\t\t\t\t\t<stop offset='95%' stop-color='green' />\r\n\t\t\t\t\t\t\t\t</radialGradient>\r\n\t\t\t\t\t\t\t</defs>\r\n\t\t\t\t\t\t\t<circle cx={currentShape.coordX} cy={currentShape.coordY} r={currentShape.radius} />\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tresetRoot: () => dispatch({ type: 'RESET_ROOT' }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Canvas)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ShapeContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tanimating: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.resetRoot()\r\n\t}\r\n\r\n\tloopCreatAnimation = timestamp => {\r\n\t\tif (this.props.leaves.length > 0) {\r\n\t\t\tthis.props.createNodes()\r\n\t\t\tthis.frame = requestAnimationFrame(this.loopCreatAnimation)\r\n\t\t} else {\r\n\t\t\tcancelAnimationFrame(this.frame)\r\n\t\t\tthis.state.animating = false\r\n\t\t\tconsole.log('end of animation')\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleAnimation = () => {\r\n\t\tif (this.state.animating) {\r\n\t\t\tcancelAnimationFrame(this.frame)\r\n\t\t\tconsole.log('cancelled animation')\r\n\t\t\tthis.state.animating = false\r\n\t\t}\r\n\t\t// this.props.reset()\r\n\t\tthis.props.resetRoot()\r\n\t\tthis.state.animating = true\r\n\t\tthis.frame = requestAnimationFrame(this.loopCreatAnimation)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\twidth: this.props.viewportDims.width,\r\n\t\t\t\t\theight: this.props.viewportDims.height\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.nodes.map((currentShape, i) => {\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\twidth: currentShape.radius * 2,\r\n\t\t\t\t\t\theight: currentShape.radius * 2,\r\n\t\t\t\t\t\tleft: currentShape.coordX,\r\n\t\t\t\t\t\ttop: currentShape.coordY,\r\n\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\tbackground: `radial-gradient(rgba(${currentShape.color}, 0.1),rgba(${currentShape.color}, 0.2) , rgba(${\r\n\t\t\t\t\t\t\tcurrentShape.color\r\n\t\t\t\t\t\t}, 0.8))`,\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttransform: `translate(-${currentShape.radius}px, -${currentShape.radius}px)`\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div className='cell' style={styles} key={i} onClick={this.toggleAnimation} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tresetRoot: () => dispatch({ type: 'RESET_ROOT' }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' }),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ShapeContainer)\r\n","import React, { Component } from 'react'\r\n\r\nclass InputField extends Component {\r\n\trender() {\r\n\t\tlet { propName, propLabel, propValue, propMin, propMax, fieldChange, formSubmit } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='settings-controllers'>\r\n\t\t\t\t<label className='controller-label'>{propLabel}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='sliders'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default InputField\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputField from './InputField'\r\nimport DoubleInput from './DoubleInput'\r\n\r\nclass SettingsForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = this.props.settings\r\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\r\n\t\tthis.handleFormSubmission = this.handleFormSubmission.bind(this)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.settings !== this.props.settings) {\r\n\t\t\tthis.setState(this.props.settings)\r\n\t\t}\r\n\t}\r\n\r\n\thandleFormChange = (value, targetProp, i) => {\r\n\t\tif (i === undefined) {\r\n\t\t\tthis.setState({ [targetProp]: value })\r\n\t\t} else if (i === 0) {\r\n\t\t\tthis.setState({ [targetProp]: [[value, this.state.angleRange[0][1]]] })\r\n\t\t} else if (i === 1) {\r\n\t\t\tthis.setState({ [targetProp]: [[this.state.angleRange[0][0], value]] })\r\n\t\t}\r\n\t}\r\n\r\n\thandleFormSubmission = e => {\r\n\t\te.preventDefault()\r\n\t\tthis.props.updateSettings(this.state)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='settings-controller'>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='settings-form'\r\n\t\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\t\tthis.handleFormSubmission(e)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'minSize'}\r\n\t\t\t\t\t\tpropLabel={'Min Size'}\r\n\t\t\t\t\t\tpropValue={this.state.minSize}\r\n\t\t\t\t\t\tpropMin={1}\r\n\t\t\t\t\t\tpropMax={10}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'anglePrecision'}\r\n\t\t\t\t\t\tpropLabel={'Angle Prec.'}\r\n\t\t\t\t\t\tpropValue={this.state.anglePrecision}\r\n\t\t\t\t\t\tpropMin={0}\r\n\t\t\t\t\t\tpropMax={100}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'decay'}\r\n\t\t\t\t\t\tpropLabel={'Decay'}\r\n\t\t\t\t\t\tpropValue={this.state.decay}\r\n\t\t\t\t\t\tpropMin={0}\r\n\t\t\t\t\t\tpropMax={90}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'decayPrecision'}\r\n\t\t\t\t\t\tpropLabel={'D Precision'}\r\n\t\t\t\t\t\tpropValue={this.state.decayPrecision}\r\n\t\t\t\t\t\tpropMin={0}\r\n\t\t\t\t\t\tpropMax={100}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input className='reset-button' type='submit' value='Reset' style={{ visibility: 'hidden' }} />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateSettings: settingsObj => dispatch({ type: 'UPDATE_SETTINGS', settings: settingsObj }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SettingsForm)\r\n","import React, { Component } from 'react'\r\n\r\nclass InputField extends Component {\r\n\trender() {\r\n\t\tlet { propName, propLabel, propValue, propMin, propMax, fieldChange, formSubmit } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='settings-controllers'>\r\n\t\t\t\t<label className='controller-label'>{propLabel}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue[0]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 0)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='slidersHalf'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue[0]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 0)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='slidersHalf'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue[1]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 1)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue[1]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 1)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default InputField\r\n","function totalizeAngleRange(angleArr) {\r\n\tlet totalAngleArr = angleArr.map((currentRangeArr, index) => {\r\n\t\treturn currentRangeArr[1] - currentRangeArr[0]\r\n\t})\r\n\tlet totalAngle = totalAngleArr.reduce((partial_sum, a) => partial_sum + a)\r\n\treturn totalAngle\r\n}\r\n\r\nfunction angleSqueeze(arrayToSpread, rangeToSpread, arrayToSpreadOver, parentAngle){\r\n\tlet rangeToSpreadOver = totalizeAngleRange(arrayToSpreadOver)\r\n\tlet numberOfRanges = arrayToSpreadOver.length\r\n\r\n}\r\n\r\nfunction angleSpread(arrayToSpread, rangeToSpread, arrayToSpreadOver, parentAngle) {\r\n\t// adds equal sized spaces between the circles to spread them apart\r\n\tlet rangeToSpreadOver = totalizeAngleRange(arrayToSpreadOver)\r\n\tlet numberOfRanges = arrayToSpreadOver.length\r\n\tlet emptySpace = rangeToSpreadOver - rangeToSpread\r\n\tlet spaceBetween\r\n\r\n\tif (emptySpace < 0) {\r\n\t\temptySpace = 0\r\n\t}\r\n\tif (arrayToSpread.length === 0) {\r\n\t\tspaceBetween = 0\r\n\t} else {\r\n\t\tspaceBetween = degToRad(emptySpace / (arrayToSpread.length * 2))\r\n\t}\r\n\r\n\tlet cummAngle = degToRad(arrayToSpreadOver[0][0])\r\n\tlet rangeNumber = 0\r\n\tlet resultArray = []\r\n\tlet initialArray = arrayToSpread\r\n\tlet initSpreadArray = []\r\n\tfor (var i = 0; i < arrayToSpreadOver.length; i++) {\r\n\t\tinitSpreadArray = shiftEntireArray(initialArray, arrayToSpreadOver, i)\r\n\t\tfor (var j = 0; j < initialArray.length; j++) {\r\n\t\t\tlet newEl = Object.assign({}, initSpreadArray[j])\r\n\t\t\tlet tempAngle = newEl.angle + (2 * j + 1) * spaceBetween\r\n\t\t\trangeNumber = findMatchingRange(arrayToSpreadOver, radToDeg(tempAngle))\r\n\t\t\tif (rangeNumber === -1) {\r\n\t\t\t\tbreak\r\n\t\t\t} else {\r\n\t\t\t\tnewEl.angle = tempAngle\r\n\t\t\t\tresultArray.push(newEl)\r\n\t\t\t\tinitialArray.splice(0, j)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet filteredArray = resultArray.filter(function(el) {\r\n\t\treturn el != null\r\n\t})\r\n\r\n\tlet finalPositionedArray = filteredArray.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(parentAngle)\r\n\t\treturn newEl\r\n\t})\r\n\treturn finalPositionedArray\r\n}\r\n\r\nfunction shiftEntireArray(arrayToShift, refArr, i) {\r\n\treturn arrayToShift.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(refArr[i][0])\r\n\t\t// console.log(radToDeg(el.angle), '+', refArr[i][0], '-->', radToDeg(newEl.angle))\r\n\t\treturn newEl\r\n\t})\r\n}\r\n\r\nfunction findMatchingRange(ranges, checkValue) {\r\n\tfunction checkRange(range) {\r\n\t\t// console.log('checkValue', checkValue, 'range[0]', range[0], 'range[1]', range[1])\r\n\t\treturn checkValue >= range[0] && checkValue <= range[1]\r\n\t}\r\n\treturn ranges.findIndex(checkRange)\r\n}\r\n\r\nfunction radToDeg(angle) {\r\n\treturn Math.round((angle * 180) / Math.PI)\r\n}\r\n\r\nfunction degToRad(angle) {\r\n\treturn Math.round((angle * Math.PI * 100) / 180) / 100\r\n}\r\n\r\nexport { totalizeAngleRange, angleSpread, degToRad, radToDeg }\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { totalizeAngleRange, angleSpread, degToRad, radToDeg } from '../utils/angleFunctions'\r\n\r\nclass RangeHandlebars extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\t// Initial state based on props and new parameters\r\n\t\tthis.state = {\r\n\t\t\tangleRange: this.props.settings.angleRange,\r\n\t\t\tradius: parseFloat(this.props.radius),\r\n\t\t\thandle: {\r\n\t\t\t\theight: 3\r\n\t\t\t},\r\n\t\t\thover: false,\r\n\t\t\tdragging: false,\r\n\t\t\tid: this.props.id,\r\n\t\t\tminMax: this.props.minMax\r\n\t\t}\r\n\t\t// Initialize deg and rad angles\r\n\t\t// hardcoded center based on bottom left controller + 10px padding\r\n\t\t// --- todo: make this flexible and based on position of parent getBoundingClientRect()\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tcenter: {\r\n\t\t\t\tcx: 10 + parseFloat(this.props.radius),\r\n\t\t\t\tcy: -10 + this.props.viewportDims.height - this.props.radius\r\n\t\t\t},\r\n\t\t\tangle: this.fromRangeToAngle()\r\n\t\t}\r\n\t\t// Calculate position of each handlebar\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tpos: {\r\n\t\t\t\tx: parseFloat(this.state.radius),\r\n\t\t\t\ty: parseFloat(this.state.radius)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Bind mouse event functions\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this)\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this)\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\r\n\t\tthis.fromRangeToAngle = this.fromRangeToAngle.bind(this)\r\n\t\tthis.fromAngleToRange = this.fromAngleToRange.bind(this)\r\n\t\tthis.updateStates = this.updateStates.bind(this)\r\n\t}\r\n\r\n\tcomponentDidUpdate(props, state) {\r\n\t\tif (this.state.dragging && !state.dragging) {\r\n\t\t\tdocument.addEventListener('mousemove', this.onMouseMove)\r\n\t\t\tdocument.addEventListener('mouseup', this.onMouseUp)\r\n\t\t} else if (!this.state.dragging && state.dragging) {\r\n\t\t\tdocument.removeEventListener('mousemove', this.onMouseMove)\r\n\t\t\tdocument.removeEventListener('mouseup', this.onMouseUp)\r\n\t\t}\r\n\t}\r\n\r\n\tfromRangeToAngle = () => {\r\n\t\treturn {\r\n\t\t\tdeg: parseFloat(this.props.angle),\r\n\t\t\trad: degToRad(parseFloat(this.props.angle))\r\n\t\t}\r\n\t}\r\n\r\n\tfromAngleToRange = () => {\r\n\t\tlet newRanges = this.state.angleRange\r\n\t\tnewRanges[parseFloat(this.state.id[0])][parseFloat(this.state.id[1])] = this.state.angle.deg\r\n\t\tthis.setState({ angleRange: newRanges })\r\n\t}\r\n\r\n\ttoggleHover = () => {\r\n\t\tthis.setState({ hover: !this.state.hover })\r\n\t}\r\n\r\n\t// calculate relative position to the mouse and set dragging=true\r\n\tonMouseDown = e => {\r\n\t\tif (e.button !== 0) return\r\n\t\tthis.setState({\r\n\t\t\tdragging: true\r\n\t\t})\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tonMouseUp = e => {\r\n\t\tthis.setState({ dragging: false, mouseQuad: 0 })\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t\t// todo: trigger dispatch action here with settings updated with new angleRange\r\n\t}\r\n\r\n\tonMouseMove = e => {\r\n\t\tif (!this.state.dragging) return\r\n\t\tlet deltaY = e.pageY - this.state.center.cy\r\n\t\tlet deltaX = e.pageX - this.state.center.cx\r\n\t\tlet newAngleInRad = Math.atan(deltaY / deltaX)\r\n\t\tif (deltaX < 0 && deltaY < 0) {\r\n\t\t\t// Top left Quadrant\r\n\t\t\tnewAngleInRad -= Math.PI\r\n\t\t} else if (deltaX < 0 && deltaY > 0) {\r\n\t\t\t// Bottom left Quadrant\r\n\t\t\tnewAngleInRad += Math.PI\r\n\t\t}\r\n\t\tif (newAngleInRad <= this.state.minMax.min) {\r\n\t\t\tnewAngleInRad = this.state.minMax.min\r\n\t\t}\r\n\t\tif (newAngleInRad >= this.state.minMax.max) {\r\n\t\t\tnewAngleInRad = this.state.minMax.max\r\n\t\t}\r\n\t\tif (Math.abs(this.state.angle.rad - newAngleInRad) > Math.PI / 4) {\r\n\t\t\tnewAngleInRad = this.state.angle.rad\r\n\t\t}\r\n\t\tthis.updateStates(newAngleInRad)\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tupdateStates = ang => {\r\n\t\tthis.setState({\r\n\t\t\tangle: {\r\n\t\t\t\tdeg: radToDeg(ang),\r\n\t\t\t\trad: ang\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fromAngleToRange()\r\n\t\tthis.props.handleChange(this.state.angleRange, 'angleRange', this.state.id)\r\n\t\tthis.setState({ minMax: this.props.minMax })\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet componentClasses = ['handlebars']\r\n\t\tif (this.state.hover) {\r\n\t\t\tcomponentClasses += 'hover'\r\n\t\t}\r\n\t\tlet styles = {\r\n\t\t\tposition: 'absolute',\r\n\t\t\theight: `${this.state.handle.height}px`,\r\n\t\t\twidth: this.state.radius,\r\n\t\t\tleft: `${this.state.pos.x}px`,\r\n\t\t\ttop: `${this.state.pos.y}px`,\r\n\t\t\ttransform: `rotate(${this.state.angle.deg}deg)`,\r\n\t\t\ttransformOrigin: `0px`,\r\n\t\t\tborderRadius: '5px',\r\n\t\t\ttextAlign: 'end',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'flex-end',\r\n\t\t\tpaddingRight: '5px'\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={styles}\r\n\t\t\t\tclassName={componentClasses}\r\n\t\t\t\tonMouseEnter={this.toggleHover}\r\n\t\t\t\tonMouseLeave={this.toggleHover}\r\n\t\t\t\tonMouseDown={this.onMouseDown}>\r\n\t\t\t\t<FontAwesomeIcon icon={faCaretUp} />\r\n\t\t\t\t<FontAwesomeIcon icon={faCaretDown} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n\tviewportDims: state.viewportDims\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(RangeHandlebars)\r\n","function flatten(arr, val) {\r\n\treturn arr.reduce((acc, val) => acc.concat(val), [])\r\n}\r\n\r\nfunction pluck(arr, key) {\r\n\treturn arr.map(function(item) {\r\n\t\treturn item[key]\r\n\t})\r\n}\r\n\r\nfunction multiPluck(arr, keys) {\r\n\treturn arr.map(function(item) {\r\n\t\tvar obj = {}\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tobj[keys[i]] = item[keys[i]]\r\n\t\t}\r\n\t\treturn obj\r\n\t})\r\n}\r\n\r\nexport { flatten, pluck, multiPluck }\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport RangeHandlebars from './RangeHandlebars'\r\nimport { totalizeAngleRange, angleSpread, degToRad, radToDeg } from '../utils/angleFunctions'\r\nimport { flatten } from '../utils/arrayFunctions'\r\n\r\nclass RadialControl extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tangleRange: this.props.settings.angleRange,\r\n\t\t\tmaxAngleRanges: this.props.settings.maxAngleRanges,\r\n\t\t\tradius: this.props.radius,\r\n\t\t\trootAngle: this.props.settings.rootAngle\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tminMax: this.calcAllMinMax(),\r\n\t\t\tpad: 10\r\n\t\t}\r\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\r\n\t\tthis.calcAllMinMax = this.calcAllMinMax.bind(this)\r\n\t\tthis.createPieData = this.createPieData.bind(this)\r\n\t}\r\n\r\n\t// componentDidUpdate(prevProps) {\r\n\t// \tif (prevProps.settings !== this.props.settings) {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tangleRange: this.props.settings.angleRange,\r\n\t// \t\t\tmaxAngleRanges: this.props.settings.maxAngleRanges,\r\n\t// \t\t\tradius: this.props.radius,\r\n\t// \t\t\trootAngle: this.props.settings.rootAngle\r\n\t// \t\t})\r\n\t// \t\tthis.setState({\r\n\t// \t\t\t...this.state,\r\n\t// \t\t\tminMax: this.calcAllMinMax(),\r\n\t// \t\t\tpad: 10\r\n\t// \t\t})\r\n\t// \t}\r\n\t// }\r\n\r\n\thandleFormChange = (value, targetProp, i) => {\r\n\t\tthis.setState({ [targetProp]: value })\r\n\t\tthis.setState({ minMax: this.calcAllMinMax() })\r\n\t}\r\n\r\n\tcalcAllMinMax = () => {\r\n\t\tlet flatArr = flatten(this.state.angleRange)\r\n\t\tlet boundArr = flatten([-180, flatArr, 180])\r\n\t\tlet mmArr = boundArr.map((currentValue, currentIndex) => {\r\n\t\t\tif (currentIndex === 0 || currentIndex === boundArr.length - 1) return {}\r\n\t\t\tlet prevIndex = currentIndex - 1\r\n\t\t\tlet nextIndex = currentIndex + 1\r\n\t\t\tlet key = Math.floor((currentIndex - 1) / 2) + '' + ((currentIndex - 1) % 2)\r\n\t\t\treturn {\r\n\t\t\t\t[key]: {\r\n\t\t\t\t\tmin: degToRad(boundArr[prevIndex] + this.state.pad),\r\n\t\t\t\t\tmax: degToRad(boundArr[nextIndex] - this.state.pad)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Object.assign({}, ...mmArr)\r\n\t}\r\n\r\n\tcreatePieData = (arr, initial) => {\r\n\t\treturn flatten(\r\n\t\tarr.map((currentRange, i, allRanges) => {\r\n\t\t\tlet nextRangeStart = 0\r\n\t\t\tif (i >= allRanges.length - 1) {\r\n\t\t\t\tnextRangeStart = initial + 360\r\n\t\t\t} else {\r\n\t\t\t\tnextRangeStart = allRanges[i + 1][0]\r\n\t\t\t}\r\n\t\t\tlet sectionData = {\r\n\t\t\t\ttitle: `${i}`,\r\n\t\t\t\tvalue: (parseFloat(currentRange[1]) % 360) - (parseFloat(currentRange[0]) % 360),\r\n\t\t\t\tcolor: `rgba(210, 77, 87, 0.7)`\r\n\t\t\t}\r\n\t\t\tlet emptyValue = nextRangeStart - (parseFloat(currentRange[1]) % 360)\r\n\t\t\tlet emptySectionData = {\r\n\t\t\t\ttitle: `blank${i}`,\r\n\t\t\t\tvalue: emptyValue,\r\n\t\t\t\tcolor: emptyValue <= this.state.pad ? `rgba(255,255,255,0.8)` : `rgba(0,0,0,0.2)`,\r\n\t\t\t}\r\n\t\t\treturn [sectionData, emptySectionData]\r\n\t\t})\r\n\t)}\r\n\r\n\trender() {\r\n\t\tlet angleRanges = this.state.angleRange\r\n\t\tlet initAngle = Math.min(...angleRanges[0])\r\n\t\tlet controllerRadius = this.state.radius\r\n\t\treturn (\r\n\t\t\t<div className='radial-controller'>\r\n\t\t\t\t{angleRanges.map((currentRange, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='rangeHandlebars' key={i}>\r\n\t\t\t\t\t\t\t<RangeHandlebars\r\n\t\t\t\t\t\t\t\tradius={controllerRadius}\r\n\t\t\t\t\t\t\t\tangle={parseFloat(currentRange[0]) % 360}\r\n\t\t\t\t\t\t\t\tminMax={this.state.minMax[i + '0']}\r\n\t\t\t\t\t\t\t\tid={i + '0'}\r\n\t\t\t\t\t\t\t\thandleChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RangeHandlebars\r\n\t\t\t\t\t\t\t\tradius={controllerRadius}\r\n\t\t\t\t\t\t\t\tangle={parseFloat(currentRange[1]) % 360}\r\n\t\t\t\t\t\t\t\tminMax={this.state.minMax[i + '1']}\r\n\t\t\t\t\t\t\t\tid={i + '1'}\r\n\t\t\t\t\t\t\t\thandleChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\t<PieChart\r\n\t\t\t\t\tdata={this.createPieData(angleRanges, initAngle)}\r\n\t\t\t\t\tstyle={{ width: `${controllerRadius * 2}px`}}\r\n\t\t\t\t\tsegmentsStyle={{ transition: 'stroke .3s' }}\r\n\t\t\t\t\tstartAngle={parseFloat(angleRanges[0][0]) % 360}\r\n\t\t\t\t\ttotalValue={360}\r\n\t\t\t\t\tlineWidth={42}\r\n\t\t\t\t\tradius={42}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateSettings: settingsObj => dispatch({ type: 'UPDATE_SETTINGS', settings: settingsObj }),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(RadialControl)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ObstacleContainer extends Component {\r\n\r\n\trender() {\r\n\t\t// console.log('zoom', this.props.stage.zoom)\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\twidth: this.props.viewportDims.width,\r\n\t\t\t\t\theight: this.props.viewportDims.height\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.obstacles.map((currentObstacle, i) => {\r\n\t\t\t\t\t// if(!currentObstacle){return}\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\twidth: currentObstacle[2].x-currentObstacle[0].x,\r\n\t\t\t\t\t\theight: currentObstacle[2].y-currentObstacle[0].y,\r\n\t\t\t\t\t\tleft: currentObstacle[0].x,\r\n\t\t\t\t\t\ttop: currentObstacle[0].y,\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tposition: 'absolute'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div style={styles} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t\t{this.props.targets.map((currentTarget, i) => {\r\n\t\t\t\t\t// if(!currentTarget){return}\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\twidth: currentTarget[2].x-currentTarget[0].x,\r\n\t\t\t\t\t\theight: currentTarget[2].y-currentTarget[0].y,\r\n\t\t\t\t\t\tleft: currentTarget[0].x,\r\n\t\t\t\t\t\ttop: currentTarget[0].y,\r\n\t\t\t\t\t\tbackground: 'rgba(210,50,50,0.7)',\r\n\t\t\t\t\t\tposition: 'absolute'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div style={styles} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tobstacles: state.obstacles,\r\n\ttargets: state.targets,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ObstacleContainer)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ScoreCounter extends Component {\r\n\thandleClick = () => {\r\n\t\tthis.props.getWinningPath()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='score' onClick={this.handleClick}>\r\n\t\t\t\tScore: {this.props.nodes.length - 1}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tnodes: state.nodes\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgetWinningPath: () => dispatch({ type: 'GET_WINNING_PATH' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ScoreCounter)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFlask, faBullseye, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ModeSelector extends Component {\r\n\thandleclick = () => {\r\n\t\tthis.props.changeGameMode()\r\n\t\tthis.props.resetRoot()\r\n\t}\r\n\r\n\trender() {\r\n\t\tvar icon,icon2\r\n    this.props.gameMode == 'breakOut' ? (icon = faFlask) : ([icon,icon2] = [faBullseye,faCaretDown])\r\n    \r\n\r\n\t\treturn (\r\n\t\t\t<div className='gameModeButton' onClick={this.handleclick}>\r\n\t\t\t\t<FontAwesomeIcon icon={icon} />\r\n        {/* <FontAwesomeIcon icon={icon2}/> */}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tgameMode: state.gameMode\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tchangeGameMode: () => dispatch({ type: 'TOGGLE_GAME_MODE' }),\r\n\tresetRoot: () => dispatch({ type: 'RESET_ROOT' }),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ModeSelector)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../styles/App.css'\r\nimport Canvas from '../containers/Canvas'\r\nimport ShapeContainer from '../containers/ShapeContainer'\r\nimport SettingsForm from './SettingsForm'\r\nimport RadialControl from './RadialControl'\r\nimport ObstacleContainer from '../containers/ObstacleContainer'\r\nimport ScoreCounter from './ScoreCounter'\r\nimport ModeSelector from './ModeSelector'\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = this.props.viewportDims\r\n\t\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateWindowDimensions()\r\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tupdateWindowDimensions() {\r\n\t\tthis.setState({ width: window.innerWidth, height: window.innerHeight })\r\n\t\tthis.props.updateViewport(this.state)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<header className='App-header'>\r\n\t\t\t\t\t<div className='stage' style={{ transform: `scale(${this.props.stage.zoom})`, position: 'relative' }}>\r\n\t\t\t\t\t\t<ObstacleContainer />\r\n\t\t\t\t\t\t<ShapeContainer />\r\n\t\t\t\t\t\t{/* <Canvas /> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ModeSelector />\r\n\t\t\t\t\t<ScoreCounter />\r\n\t\t\t\t\t<RadialControl radius={0.05 * this.state.width} />\r\n\t\t\t\t\t<SettingsForm />\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateViewport: viewportObj => dispatch({ type: 'UPDATE_VIEWPORT', viewportDims: viewportObj })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App)\r\n","// ~~~~~~~~~~~ CREATE FRAGMENTED ARRAY ~~~~~~~~~~~~~~~//\r\nfunction createFragmentedArray(parentsArr, settings) {\r\n\tvar allChildrenArray = parentsArr.map((currentParent, index) => {\r\n\t\treturn distributeParentValue(currentParent, settings)\r\n\t})\r\n\tallChildrenArray = flatten(allChildrenArray)\r\n\treturn allChildrenArray\r\n}\r\n\r\n// ~~~~~~~~~~~~~~ DISTRIBUTE VALUE ~~~~~~~~~~~~~~~~~~~//\r\nfunction distributeParentValue(parent, settings) {\r\n\tlet myAngle = 0\r\n\tlet mySize = 0\r\n\tlet myRange = 0\r\n\tlet currentChildrenArray = []\r\n\tlet myDistance = parent.radius + 5 // Adjust this to move children off of circumferance\r\n\tlet siblingCounter = 0\r\n\r\n\tif (parent.radius <= settings.minSize || parent.id.length === 40) {\r\n\t\treturn currentChildrenArray\r\n\t} else {\r\n\t\tlet minAngle = Math.atan(settings.minSize / myDistance)\r\n\t\tlet rangeSizeArr = calcRangeSize(settings.angleRange)\r\n\t\tlet rangeToSpreadOver = totalizeAngleRange(rangeSizeArr)\r\n\t\tlet remainder = randomSpread(\r\n\t\t\tparent.radius,\r\n\t\t\tsettings.multiplier,\r\n\t\t\tsettings.multiplierPrecision,\r\n\t\t\t0.5 * parent.radius,\r\n\t\t\t2\r\n\t\t)\r\n\t\t// remainder = degToRad(remainder)\r\n\r\n\t\twhile (remainder >= settings.minSize) {\r\n\t\t\t// As long as there is a remainder, create new leaves\r\n\t\t\tmySize = randomSpread(parent.radius * Math.random(), 100-settings.decay, settings.decayPrecision, parent.radius, -1)\r\n\r\n\t\t\tlet myAngleSpan = 2 * Math.atan(mySize / myDistance)\r\n\t\t\tremainder -= Math.max(mySize,0)\r\n\r\n\t\t\t// Create the new leaf as long as it is greater than minSize\r\n\t\t\tif (mySize >= settings.minSize) {\r\n\t\t\t\t// Place leaf in range if it fits\r\n\t\t\t\tfor (var r = 0; r < rangeSizeArr.length; r++) {\r\n\t\t\t\t\t// console.log('mySpan', radToDeg(myAngleSpan), 'rangeSize', rangeSizeArr[myRange])\r\n\t\t\t\t\tif (radToDeg(myAngleSpan) <= rangeSizeArr[myRange]) {\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmyRange++\r\n\t\t\t\t\t\tmyRange >= rangeSizeArr.length ? (myRange = 0) : (myRange = myRange)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmyAngle =\r\n\t\t\t\t\tparent.angle +\r\n\t\t\t\t\trandomSpread(\r\n\t\t\t\t\t\t(settings.angleRange[myRange][1] + settings.angleRange[myRange][0]) / 2,\r\n\t\t\t\t\t\t100,\r\n\t\t\t\t\t\tsettings.anglePrecision,\r\n\t\t\t\t\t\trangeSizeArr[myRange],\r\n\t\t\t\t\t\t2\r\n\t\t\t\t\t)\r\n\t\t\t\tcurrentChildrenArray.push({\r\n\t\t\t\t\tid: parent.id + '' + siblingCounter,\r\n\t\t\t\t\tradius: mySize,\r\n\t\t\t\t\tdistance: myDistance,\r\n\t\t\t\t\tcoordX: parent.coordX + myDistance * Math.cos(degToRad(myAngle)),\r\n\t\t\t\t\tcoordY: parent.coordY + myDistance * Math.sin(degToRad(myAngle)),\r\n\t\t\t\t\tangle: myAngle,\r\n\t\t\t\t\tcolor: `210, ${mySize * 20}, ${mySize * 40}` // rgb values\r\n\t\t\t\t})\r\n\t\t\t\tsiblingCounter += 1\r\n\t\t\t\tmyRange++\r\n\t\t\t\tmyRange >= rangeSizeArr.length ? (myRange = 0) : (myRange = myRange)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn currentChildrenArray\r\n\r\n\t// // Spread Angle of children over angle range\r\n\t// let distributedChildrenArray = angleSpread(\r\n\t// \tcurrentChildrenArray,\r\n\t// \tMath.abs(radToDeg(myAngle)),\r\n\t// \tsettings.angleRange,\r\n\t// \tradToDeg(parent.angle) % 360\r\n\t// )\r\n\r\n\t// let positionedChildrenArray = distributedChildrenArray.map((el, index) => {\r\n\t// \tlet newEl = Object.assign({}, el)\r\n\t// \tnewEl.coordX = newEl.coordX + newEl.distance * Math.cos(newEl.angle)\r\n\t// \tnewEl.coordY = newEl.coordY + newEl.distance * Math.sin(newEl.angle)\r\n\t// \treturn newEl\r\n\t// })\r\n\r\n\t// return positionedChildrenArray\r\n}\r\n\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//                                   RANDOM SPREAD\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nfunction randomSpread(originalValue, percentOfOriginal, precision, spread, direction) {\r\n\t// percentOfOriginal= % of originalValue\r\n\t// precision= 0%:least precise, 100%:most precise\r\n\t// originalValue: starting value\r\n\t// spread= range of values around the originalValue to pick from\r\n\t// direction= 2: centered around percentOfOriginal. 1:Positive bias. -1:negative bias\r\n\r\n\tlet randomizer = 0\r\n\r\n\tif (direction === 2) {\r\n\t\trandomizer = Math.random() - Math.random()\r\n\t} else if (direction === 1 || direction === -1) {\r\n\t\trandomizer = direction * Math.abs(Math.random() - Math.random())\r\n\t} else {\r\n\t\tdirection = -1\r\n\t}\r\n\treturn (percentOfOriginal / 100) * originalValue + (randomizer * spread * (100 - precision)) / 100\r\n}\r\n\r\nfunction noise(min, max) {\r\n\treturn min + Math.random() * (max - min)\r\n}\r\n\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//                                   ANGLE FUNCTIONS\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nfunction flatten(arr, val) {\r\n\treturn arr.reduce((acc, val) => acc.concat(val), [])\r\n}\r\n\r\nfunction calcRangeSize(angleArr) {\r\n\tlet rangeSizeArr = angleArr.map((currentRangeArr, index) => {\r\n\t\treturn currentRangeArr[1] - currentRangeArr[0]\r\n\t})\r\n\treturn rangeSizeArr\r\n}\r\n\r\nfunction totalizeAngleRange(totalAngleArr) {\r\n\tlet totalAngle = totalAngleArr.reduce((partial_sum, a) => partial_sum + a)\r\n\treturn totalAngle\r\n}\r\n\r\nfunction angleSpread(arrayToSpread, rangeToSpread, arrayToSpreadOver, parentAngle) {\r\n\t// adds equal sized spaces between the circles to spread them apart\r\n\tlet rangeSizeArr = calcRangeSize(arrayToSpreadOver)\r\n\tlet rangeToSpreadOver = totalizeAngleRange(rangeSizeArr)\r\n\tlet numberOfRanges = arrayToSpreadOver.length\r\n\tlet emptySpace = rangeToSpreadOver - rangeToSpread\r\n\tlet spaceBetween\r\n\r\n\tif (emptySpace < 0) {\r\n\t\temptySpace = 0\r\n\t}\r\n\tif (arrayToSpread.length === 0) {\r\n\t\tspaceBetween = 0\r\n\t} else {\r\n\t\tspaceBetween = degToRad(emptySpace / (arrayToSpread.length * 2))\r\n\t}\r\n\r\n\tlet cummAngle = degToRad(arrayToSpreadOver[0][0])\r\n\tlet rangeNumber = 0\r\n\tlet resultArray = []\r\n\tlet initialArray = arrayToSpread\r\n\tlet initSpreadArray = []\r\n\tfor (var i = 0; i < arrayToSpreadOver.length; i++) {\r\n\t\tinitSpreadArray = shiftEntireArray(initialArray, arrayToSpreadOver, i)\r\n\t\tfor (var j = 0; j < initialArray.length; j++) {\r\n\t\t\tlet newEl = Object.assign({}, initSpreadArray[j])\r\n\t\t\tlet tempAngle = newEl.angle + (2 * j + 1) * spaceBetween\r\n\t\t\trangeNumber = findMatchingRange(arrayToSpreadOver, radToDeg(tempAngle))\r\n\t\t\tif (rangeNumber === -1) {\r\n\t\t\t\tbreak\r\n\t\t\t} else {\r\n\t\t\t\tnewEl.angle = tempAngle\r\n\t\t\t\tresultArray.push(newEl)\r\n\t\t\t\tinitialArray.splice(0, j)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet filteredArray = resultArray.filter(function(el) {\r\n\t\treturn el != null\r\n\t})\r\n\r\n\tlet finalPositionedArray = filteredArray.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(parentAngle)\r\n\t\treturn newEl\r\n\t})\r\n\treturn finalPositionedArray\r\n}\r\n\r\nfunction shiftEntireArray(arrayToShift, refArr, i) {\r\n\treturn arrayToShift.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(refArr[i][0])\r\n\t\t// console.log(radToDeg(el.angle), '+', refArr[i][0], '-->', radToDeg(newEl.angle))\r\n\t\treturn newEl\r\n\t})\r\n}\r\n\r\nfunction findMatchingRange(ranges, checkValue) {\r\n\tfunction checkRange(range) {\r\n\t\treturn checkValue >= range[0] && checkValue <= range[1]\r\n\t}\r\n\treturn ranges.findIndex(checkRange)\r\n}\r\n\r\nfunction radToDeg(angle) {\r\n\treturn Math.round((angle * 180) / Math.PI)\r\n}\r\n\r\nfunction degToRad(angle) {\r\n\treturn Math.round((angle * Math.PI * 100) / 180) / 100\r\n}\r\n\r\nexport default createFragmentedArray\r\n\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// Offline Tests:\r\n\r\nwindow.offlineTest = offlineTest\r\nfunction offlineTest() {\r\n\tlet testRoot = [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tradius: 200,\r\n\t\t\tcoordX: 900 / 2,\r\n\t\t\tcoordY: 900 / 2,\r\n\t\t\tangle: 0\r\n\t\t}\r\n\t]\r\n\r\n\tlet testSettings = {\r\n\t\tangleRange: [[-100, -70], [-45, 45], [70, 100]], // Range: -180 to 180\r\n\t\tmaxAngleRanges: 4,\r\n\t\tminSize: 1,\r\n\t\tmultiplier: 130,\r\n\t\tmultiplierPrecision: 40, // Higher Levels, precision -> 100%\r\n\t\tdecay: 90,\r\n\t\tdecayPrecision: 40 // Higher Levels, precision -> 100%\r\n\t}\r\n\tlet newNodes = testRoot\r\n\tlet newLeaves = newNodes\r\n\tconsole.time('fragArray')\r\n\tfor (var i = 0; i < 50; i++) {\r\n\t\tnewLeaves = createFragmentedArray(newLeaves, testSettings)\r\n\t\tArray.prototype.push.apply(newNodes, newLeaves)\r\n\t\t// console.log('nodes',newNodes)\r\n\t\t// console.log('leaves',newLeaves)\r\n\t\tif (newLeaves.length === 0 || newLeaves.length > 20000) break\r\n\t}\r\n\tconsole.timeEnd('fragArray')\r\n\tconsole.log(newNodes.length)\r\n\twindow.newNodes = newNodes\r\n\t// const intId = setInterval(() => {\r\n\t// \tlet result = createFragmentedArray(testLeaves,testSettings)\r\n\t// \tconsole.log(result)\r\n\t// }, 50)\r\n\t// setTimeout(() => {\r\n\t// \tclearInterval(intId)\r\n\t// }, 10000)\r\n}\r\n","import { pluck } from '../utils/arrayFunctions'\r\n\r\nfunction calcNewZoom(leaves, stage, viewport) {\r\n\tlet allX = pluck(leaves, 'coordX')\r\n\tlet allY = pluck(leaves, 'coordY')\r\n\r\n\tlet maxX = Math.max(...allX, stage.x.max)\r\n\tlet minX = Math.min(...allX, stage.x.min)\r\n\tlet maxY = Math.max(...allY, stage.y.max)\r\n\tlet minY = Math.min(...allY, stage.y.min)\r\n\r\n\tlet deltaX = Math.max(Math.abs(minX), maxX - stage.x.max)\r\n\tlet deltaY = Math.max(Math.abs(minY), maxY - stage.y.max)\r\n\r\n\tlet newZoom = Math.trunc(10000 * 1 / Math.max(1 + (2 * deltaX) / viewport.width, 1 + (2 * deltaY) / viewport.height))/10000\r\n\tnewZoom = Math.min(newZoom,stage.zoom)\r\n\r\n\tlet newStage = {\r\n\t\tx: {\r\n\t\t\tmin: -deltaX,\r\n\t\t\tmax: viewport.width + deltaX\r\n\t\t},\r\n\t\ty: {\r\n\t\t\tmin: -deltaY,\r\n\t\t\tmax: viewport.height + deltaY\r\n\t\t},\r\n\t\tzoom: newZoom\r\n\t}\r\n\r\n\treturn newStage\r\n}\r\n\r\nexport default calcNewZoom\r\n","import { flatten, pluck, multiPluck } from '../utils/arrayFunctions'\r\n\r\nfunction doLeavesIntersectObstacles(leaves, obstacles, status) {\r\n\tlet collisionLeaves = leaves.map((currentLeaf, index) => {\r\n\t\tfor (var i = 0; i < obstacles.length; i++) {\r\n\t\t\tfor (var j = 0; j < obstacles[i].length; j++) {\r\n\t\t\t\tvar nextVert\r\n\t\t\t\tif (j == obstacles[i].length - 1) {\r\n\t\t\t\t\tnextVert = obstacles[i][0]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextVert = obstacles[i][j + 1]\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tdoesCircleIntersectSegment(\r\n\t\t\t\t\t\t{ x: currentLeaf.coordX, y: currentLeaf.coordY },\r\n\t\t\t\t\t\tcurrentLeaf.radius,\r\n\t\t\t\t\t\tobstacles[i][j],\r\n\t\t\t\t\t\tnextVert\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// true\r\n\t\t\t\t\tif (status == 'lose') {\r\n\t\t\t\t\t\tlet modLeaf = currentLeaf\r\n\t\t\t\t\t\tmodLeaf.color = `0, 0, 0` // rgb values\r\n\t\t\t\t\t\tmodLeaf.radius = 0\r\n\t\t\t\t\t\treturn modLeaf\r\n\t\t\t\t\t} else if (status == 'win') {\r\n\t\t\t\t\t\tlet modLeaf = currentLeaf\r\n\t\t\t\t\t\tmodLeaf.radius = modLeaf.radius * 1.1 // Size boost at target\r\n\t\t\t\t\t\tmodLeaf.color = `210, 50, 50` // rgb values\r\n\t\t\t\t\t\tmodLeaf.status = 'win'\r\n\t\t\t\t\t\treturn modLeaf\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn currentLeaf\r\n\t})\r\n\treturn collisionLeaves\r\n}\r\n\r\nfunction doesCircleIntersectSegment(center, radius, vertex1, vertex2) {\r\n\t// Check if vertices are in the circle, then check if distance is within radius\r\n\tif (distanceBetweenPoints(center, vertex1) <= radius || distanceBetweenPoints(center, vertex2) <= radius) {\r\n\t\treturn true\r\n\t} else if (distanceToSegment(center, vertex1, vertex2) <= radius) {\r\n\t\treturn true\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nfunction distanceBetweenPoints(point1, point2) {\r\n\treturn Math.sqrt(sqr(point2.x - point1.x) + sqr(point2.y - point1.y))\r\n}\r\n\r\nfunction distanceToSegment(center, vertex1, vertex2) {\r\n\t// center, vertex1, & vertex2 as objects: {x: ..., y: ...}\r\n\tconst x = center.x\r\n\tconst y = center.y\r\n\tconst x1 = vertex1.x\r\n\tconst y1 = vertex1.y\r\n\tconst x2 = vertex2.x\r\n\tconst y2 = vertex2.y\r\n\r\n\tvar A = x - x1\r\n\tvar B = y - y1\r\n\tvar C = x2 - x1\r\n\tvar D = y2 - y1\r\n\r\n\tvar dot = A * C + B * D\r\n\tvar len_sq = sqr(C) + sqr(D)\r\n\tvar param = -1\r\n\tif (len_sq != 0)\r\n\t\t//in case of 0 length line\r\n\t\tparam = dot / len_sq\r\n\r\n\tvar xx, yy\r\n\r\n\tif (param < 0) {\r\n\t\txx = x1\r\n\t\tyy = y1\r\n\t} else if (param > 1) {\r\n\t\txx = x2\r\n\t\tyy = y2\r\n\t} else {\r\n\t\txx = x1 + param * C\r\n\t\tyy = y1 + param * D\r\n\t}\r\n\r\n\tvar dx = x - xx\r\n\tvar dy = y - yy\r\n\treturn Math.sqrt(sqr(dx) + sqr(dy))\r\n}\r\n\r\nfunction sqr(x) {\r\n\treturn x * x\r\n}\r\n\r\nexport default doLeavesIntersectObstacles\r\n","export const levelStates = {\r\n\t0: {\r\n\t\tstage: { x: { min: 0, max: window.innerWidth }, y: { min: 0, max: window.innerHeight }, zoom: 0.3 },\r\n\t\tsettings: {\r\n\t\t\tangleRange: [[-180, 180]], // Range: -180 to 180\r\n\t\t\tmaxAngleRanges: 4,\r\n\t\t\tminSize: 4,\r\n\t\t\tmultiplier: 130,\r\n\t\t\tmultiplierPrecision: 80, // Higher Levels, precision -> 100%\r\n\t\t\tdecay: 10,\r\n\t\t\tdecayPrecision: 40, // Higher Levels, precision -> 100%\r\n\t\t\tanglePrecision: 50,\r\n\t\t\trootAngle: -90,\r\n\t\t\trootCoords: { coordX: window.innerWidth * 0.5, coordY: window.innerHeight * 0.5 },\r\n\t\t\trootSize: 170\r\n\t\t},\r\n\t\tobstacles: [],\r\n\t\ttargets: []\r\n\t},\r\n\t1: {\r\n\t\tstage: { x: { min: 0, max: window.innerWidth }, y: { min: 0, max: window.innerHeight }, zoom: 0.3 },\r\n\t\tsettings: {\r\n\t\t\tangleRange: [[-100, -70], [-45, 45], [70, 100]], // Range: -180 to 180\r\n\t\t\tmaxAngleRanges: 4,\r\n\t\t\tminSize: 4,\r\n\t\t\tmultiplier: 200,\r\n\t\t\tmultiplierPrecision: 80, // Higher Levels, precision -> 100%\r\n\t\t\tdecay: 10,\r\n\t\t\tdecayPrecision: 50, // Higher Levels, precision -> 100%\r\n\t\t\tanglePrecision: 0,\r\n\t\t\trootAngle: 0,\r\n\t\t\trootCoords: { coordX: window.innerWidth * 0.4, coordY: window.innerHeight * 0.5 },\r\n\t\t\trootSize: 100\r\n\t\t},\r\n\t\tobstacles: [\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.1 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 + 50 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.9 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2 + 50, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2 + 50, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 - 50 }\r\n\t\t\t]\r\n\t\t], // Draw obstacles clockwise\r\n\t\ttargets: [\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.8 - 50, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8 - 50, y: window.innerHeight * 0.9 - 50 }\r\n\t\t\t]\r\n\t\t]\r\n\t},\r\n\t2: {\r\n\t\tstage: { x: { min: 0, max: window.innerWidth }, y: { min: 0, max: window.innerHeight }, zoom: 0.3 },\r\n\t\tsettings: {\r\n\t\t\tangleRange: [[-45, 45]], // Range: -180 to 180\r\n\t\t\tmaxAngleRanges: 4,\r\n\t\t\tminSize: 4,\r\n\t\t\tmultiplier: 200,\r\n\t\t\tmultiplierPrecision: 80, // Higher Levels, precision -> 100%\r\n\t\t\tdecay: 10,\r\n\t\t\tdecayPrecision: 50, // Higher Levels, precision -> 100%\r\n\t\t\tanglePrecision: 100,\r\n\t\t\trootAngle: 0,\r\n\t\t\trootCoords: { coordX: window.innerWidth * 0.4, coordY: window.innerHeight * 0.5 },\r\n\t\t\trootSize: 100\r\n\t\t},\r\n\t\tobstacles: [\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.1 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 + 50 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.8, y: window.innerHeight * 0.9 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2 + 50, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2 + 50, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.2, y: window.innerHeight * 0.9 - 50 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.3 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.3 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.7 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.7 - 50 }\r\n\t\t\t]\r\n\t\t], // Draw obstacles clockwise\r\n\t\ttargets: [\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.1 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.4 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.4 - 50 }\r\n\t\t\t],\r\n\t\t\t[\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.6 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.6 + 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7, y: window.innerHeight * 0.9 - 50 },\r\n\t\t\t\t{ x: window.innerWidth * 0.7 - 50, y: window.innerHeight * 0.9 - 50 }\r\n\t\t\t]\r\n\t\t]\r\n\t}\r\n}\r\n","import createFragmentedArray from '../utils/fragment'\r\nimport calcNewZoom from '../utils/stageSetup'\r\nimport doLeavesIntersectObstacles from '../utils/collisions'\r\nimport { levelStates } from '../levels/levels'\r\n// import highlightWinningPath from '../utils/winningPath'\r\n\r\nconst defaultLevel = 1\r\n\r\nconst initialState = {\r\n\tviewportDims: { width: window.innerWidth, height: window.innerHeight },\r\n\tnodes: [],\r\n\tleaves: [],\r\n\tgameMode: 'breakOut',\r\n\tlevel: defaultLevel,\r\n\tstage: levelStates[defaultLevel].stage,\r\n\tsettings: levelStates[defaultLevel].settings,\r\n\tobstacles: levelStates[defaultLevel].obstacles,\r\n\ttargets: levelStates[defaultLevel].targets\r\n}\r\n\r\nconst shapeReducer = (state = initialState, action) => {\r\n\tvar newNodes = state.nodes.slice()\r\n\tvar newLeaves = state.leaves.slice()\r\n\tvar newSettings = { ...state.settings }\r\n\tvar newViewportDims = { ...state.viewportDims }\r\n\tvar newStage = state.stage\r\n\tvar newGameMode = state.gameMode\r\n\tvar newLevel\r\n\tvar rootZero = {\r\n\t\tid: 0,\r\n\t\tradius: state.settings.rootSize,\r\n\t\tcoordX: state.settings.rootCoords.coordX,\r\n\t\tcoordY: state.settings.rootCoords.coordY,\r\n\t\tangle: state.settings.rootAngle,\r\n\t\tcolor: `210, ${150 * 20}, ${150 * 40}` // rgb values\r\n\t}\r\n\tswitch (action.type) {\r\n\t\tcase 'RESET_ROOT':\r\n\t\t\treturn { ...state, nodes: [rootZero], leaves: [rootZero], stage: levelStates[state.level].stage }\r\n\t\tcase 'CREATE_NODES':\r\n\t\t\tnewLeaves = createFragmentedArray(newLeaves, newSettings)\r\n\t\t\tnewStage = calcNewZoom(newLeaves, state.stage, state.viewportDims)\r\n\t\t\tnewLeaves = doLeavesIntersectObstacles(newLeaves, state.obstacles, 'lose')\r\n\t\t\tnewLeaves = doLeavesIntersectObstacles(newLeaves, state.targets, 'win')\r\n\t\t\tArray.prototype.push.apply(newNodes, newLeaves)\r\n\t\t\treturn { ...state, nodes: newNodes, leaves: newLeaves, stage: newStage }\r\n\t\t// case 'GET_WINNING_PATH':\r\n\t\t// \tnewNodes = highlightWinningPath(newNodes)\r\n\t\t// \treturn {...state,nodes:newNodes}\r\n\t\tcase 'UPDATE_SETTINGS':\r\n\t\t\treturn { ...state, settings: action.settings }\r\n\t\tcase 'UPDATE_VIEWPORT':\r\n\t\t\tnewViewportDims = action.viewportDims\r\n\t\t\treturn { ...state, viewportDims: newViewportDims }\r\n\t\tcase 'TOGGLE_GAME_MODE':\r\n\t\t\tif (newGameMode == 'breakOut') {\r\n\t\t\t\tnewGameMode = 'sandbox'\r\n\t\t\t\tnewLevel = levelStates[0]\r\n\t\t\t} else {\r\n\t\t\t\tnewGameMode = 'breakOut'\r\n\t\t\t\tnewLevel = levelStates[state.level]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgameMode: newGameMode,\r\n\t\t\t\tstage: newLevel.stage,\r\n\t\t\t\tsettings: newLevel.settings,\r\n\t\t\t\tobstacles: newLevel.obstacles,\r\n\t\t\t\ttargets: newLevel.targets,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default shapeReducer\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.css'\r\nimport App from './components/App'\r\nimport shapeReducer from './reducers/shapeReducer'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(shapeReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n// store.subscribe(() => {\r\n//     if (store.getState().leaves.length > 0){\r\n//         console.log(store.getState().leaves)\r\n//         store.dispatch({ type: 'CREATE_NODES' })\r\n//     }\r\n// })\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}