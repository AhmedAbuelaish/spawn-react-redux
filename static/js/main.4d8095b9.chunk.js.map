{"version":3,"sources":["containers/Canvas.js","containers/ShapeContainer.js","components/InputField.js","components/SettingsForm.js","components/DoubleInput.js","utils/angleFunctions.js","components/RangeHandlebars.js","utils/arrayFunctions.js","components/RadialControl.js","containers/ObstacleContainer.js","components/App.js","utils/randomSpread.js","utils/fragment.js","utils/stageSetup.js","utils/collisions.js","reducers/shapeReducer.js","index.js"],"names":["Canvas","handlePlantSeed","_this","props","createRoot","handleCreateShape","createNodes","_this2","this","intId","setInterval","setTimeout","console","log","nodes","clearInterval","stage","zoom","window","innerWidth","innerHeight","styles","position","left","top","width","height","transform","concat","react_default","a","createElement","className","id","style","map","currentShape","i","Fragment","offset","stop-color","cx","coordX","cy","coordY","r","radius","Component","ShapeContainer","connect","state","viewportDims","settings","leaves","dispatch","type","borderRadius","background","color","key","InputField","_this$props","propName","propLabel","propValue","propMin","propMax","fieldChange","formSubmit","min","max","value","onChange","e","target","onMouseUp","SettingsForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","targetProp","undefined","setState","defineProperty","angleRange","handleFormSubmission","preventDefault","updateSettings","reset","plantSeed","bind","assertThisInitialized","onSubmit","components_InputField","minSize","multiplierPrecision","decay","decayPrecision","settingsObj","shiftEntireArray","arrayToShift","refArr","el","index","newEl","assign","angle","degToRad","findMatchingRange","ranges","checkValue","findIndex","range","radToDeg","Math","round","PI","RangeHandlebars","fromRangeToAngle","deg","parseFloat","rad","fromAngleToRange","newRanges","toggleHover","hover","onMouseDown","button","dragging","stopPropagation","mouseQuad","onMouseMove","deltaY","pageY","center","deltaX","pageX","newAngleInRad","atan","minMax","abs","updateStates","ang","handleChange","handle","objectSpread","pos","x","y","document","addEventListener","removeEventListener","componentClasses","transformOrigin","textAlign","display","flexDirection","justifyContent","alignItems","paddingRight","onMouseEnter","onMouseLeave","index_es","icon","faCaretUp","faCaretDown","flatten","arr","val","reduce","acc","pluck","item","RadialControl","calcAllMinMax","flatArr","boundArr","mmArr","currentValue","currentIndex","length","prevIndex","nextIndex","floor","pad","apply","toConsumableArray","createPieData","initial","currentRange","allRanges","nextRangeStart","sectionData","title","emptyValue","maxAngleRanges","angleRanges","initAngle","controllerRadius","components_RangeHandlebars","dist_default","data","segmentsStyle","transition","startAngle","totalValue","lineWidth","ObstacleContainer","obstacles","currentObstacle","App","updateWindowDimensions","updateViewport","containers_ShapeContainer","components_RadialControl","components_SettingsForm","viewportObj","randomSpread","originalValue","percentOfOriginal","precision","spread","direction","randomizer","random","createFragmentedArray","parentsArr","allChildrenArray","currentParent","parent","mySize","myAngle","myDistance","currentChildrenArray","siblingCounter","remainder","multiplier","tempAngle","push","distance","arrayToSpread","rangeToSpread","arrayToSpreadOver","parentAngle","spaceBetween","rangeToSpreadOver","currentRangeArr","partial_sum","emptySpace","resultArray","initialArray","initSpreadArray","j","splice","filter","angleSpread","cos","sin","distributeParentValue","offlineTest","testSettings","newNodes","newLeaves","time","Array","prototype","timeEnd","calcNewZoom","viewport","allX","allY","maxX","minX","maxY","minY","trunc","doesCircleIntersectSegment","initialState","shapeReducer","arguments","action","slice","newSettings","newViewportDims","newStage","defaultStage","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.4d8095b9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Canvas extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.handlePlantSeed()\r\n\t\tconst intId = setInterval(() => {\r\n\t\t\tthis.handleCreateShape()\r\n\t\t}, 50)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log('cleared, final state:', this.props.nodes)\r\n\t\t\tclearInterval(intId)\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\thandlePlantSeed = () => {\r\n\t\tthis.props.createRoot()\r\n\t}\r\n\r\n\thandleCreateShape = () => {\r\n\t\tthis.props.createNodes()\r\n\t}\r\n\r\n\t// render() {\r\n\t// \tconst viewBox = [\r\n\t// \t\t0,\r\n\t// \t\t0,\r\n\t// \t\twindow.innerWidth,\r\n\t// \t\twindow.innerHeight\r\n\t// \t]\r\n\t// \tconst style = {\r\n\t// \t\tborder: '1px solid black'\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<svg id='spawn-canvas' style={style} viewBox={viewBox}>\r\n\t// \t\t\t<circle cx={150} cy={500} r={50} />\r\n\t// \t\t</svg>\r\n\t// \t)\r\n\t// }\r\n\trender() {\r\n\t\tconsole.log('zoom', this.props.stage.zoom)\r\n\t\tconst viewBox = [window.innerWidth / 2, 100 - window.innerHeight, window.innerWidth, window.innerHeight]\r\n\t\tconst styles = {\r\n\t\t\tposition: 'relative',\r\n\t\t\tleft: 0,\r\n\t\t\ttop: 0,\r\n\t\t\twidth: window.innerWidth,\r\n\t\t\theight: window.innerHeight,\r\n\t\t\ttransform: `scale(${this.props.stage.zoom})`\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<svg className='stage' id='spawn-canvas' style={styles}>\r\n\t\t\t\t{this.props.nodes.map((currentShape, i) => {\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\t// fill: 'radial-gradient(rgba(210, 77, 87, 0.1),rgba(210, 77, 87, 0.2) , rgba(210, 77, 87, 0.8))'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t\t\t<radialGradient id='exampleGradient'>\r\n\t\t\t\t\t\t\t\t\t<stop offset='10%' stop-color='gold' />\r\n\t\t\t\t\t\t\t\t\t<stop offset='95%' stop-color='green' />\r\n\t\t\t\t\t\t\t\t</radialGradient>\r\n\t\t\t\t\t\t\t</defs>\r\n\t\t\t\t\t\t\t<circle cx={currentShape.coordX} cy={currentShape.coordY} r={currentShape.radius} />\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</svg>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tcreateRoot: () => dispatch({ type: 'CREATE_ROOT' }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Canvas)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ShapeContainer extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.handlePlantSeed()\r\n\t\tconst intId = setInterval(() => {\r\n\t\t\tthis.handleCreateShape()\r\n\t\t}, 50)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log('cleared, final state:', this.props.nodes)\r\n\t\t\tclearInterval(intId)\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\thandlePlantSeed = () => {\r\n\t\tthis.props.createRoot()\r\n\t}\r\n\r\n\thandleCreateShape = () => {\r\n\t\tthis.props.createNodes()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log('zoom', this.props.stage.zoom)\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\twidth: this.props.viewportDims.width,\r\n\t\t\t\t\theight: this.props.viewportDims.height\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.nodes.map((currentShape, i) => {\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\twidth: currentShape.radius * 2,\r\n\t\t\t\t\t\theight: currentShape.radius * 2,\r\n\t\t\t\t\t\tleft: currentShape.coordX,\r\n\t\t\t\t\t\ttop: currentShape.coordY,\r\n\t\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\t\tbackground: `radial-gradient(rgba(${currentShape.color}, 0.1),rgba(${currentShape.color}, 0.2) , rgba(${currentShape.color}, 0.8))`,\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttransform: `translate(-${currentShape.radius}px, -${currentShape.radius}px)`\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div style={styles} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tcreateRoot: () => dispatch({ type: 'CREATE_ROOT' }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ShapeContainer)\r\n","import React, { Component } from 'react'\r\n\r\nclass InputField extends Component {\r\n\trender() {\r\n\t\tlet { propName, propLabel, propValue, propMin, propMax, fieldChange, formSubmit } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='settings-controllers'>\r\n\t\t\t\t<label className='controller-label'>{propLabel}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='sliders'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default InputField\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputField from './InputField'\r\nimport DoubleInput from './DoubleInput'\r\n\r\nclass SettingsForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = this.props.settings\r\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\r\n\t\tthis.handleFormSubmission = this.handleFormSubmission.bind(this)\r\n\t}\r\n\r\n\thandleFormChange = (value, targetProp, i) => {\r\n\t\tconsole.log('input:', value, 'i', i)\r\n\t\tif(i === undefined){\r\n\t\t\tthis.setState({ [targetProp]: value })\r\n\t\t} else if(i===0){\r\n\t\t\tthis.setState({ [targetProp]: [[value, this.state.angleRange[0][1]]] })\r\n\t\t\tconsole.log(this.state.angleRange, 'i', i)\r\n\t\t} else if(i===1){\r\n\t\t\tthis.setState({ [targetProp]: [[this.state.angleRange[0][0],value]] })\r\n\t\t\tconsole.log(this.state.angleRange, 'i', i)\r\n\t\t}\r\n\t}\r\n\r\n\thandleFormSubmission = e => {\r\n\t\te.preventDefault()\r\n\t\tthis.props.updateSettings(this.state)\r\n\t\tthis.props.reset()\r\n\t\tthis.plantSeed()\r\n\t\tconst intId = setInterval(() => {\r\n\t\t\tthis.handleCreateShape()\r\n\t\t}, 50)\r\n\t\tsetTimeout(() => {\r\n\t\t\tclearInterval(intId)\r\n\t\t}, 10000)\r\n\t}\r\n\r\n\tplantSeed = () => {\r\n\t\tthis.props.createRoot()\r\n\t}\r\n\r\n\thandleCreateShape = () => {\r\n\t\tthis.props.createNodes()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='settings-controller'>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='settings-form'\r\n\t\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\t\tthis.handleFormSubmission(e)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'minSize'}\r\n\t\t\t\t\t\tpropLabel={'Min Size'}\r\n\t\t\t\t\t\tpropValue={this.state.minSize}\r\n\t\t\t\t\t\tpropMin={1}\r\n\t\t\t\t\t\tpropMax={10}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'multiplierPrecision'}\r\n\t\t\t\t\t\tpropLabel={'x Precision'}\r\n\t\t\t\t\t\tpropValue={this.state.multiplierPrecision}\r\n\t\t\t\t\t\tpropMin={0}\r\n\t\t\t\t\t\tpropMax={100}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'decay'}\r\n\t\t\t\t\t\tpropLabel={'Decay'}\r\n\t\t\t\t\t\tpropValue={this.state.decay}\r\n\t\t\t\t\t\tpropMin={10}\r\n\t\t\t\t\t\tpropMax={100}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputField\r\n\t\t\t\t\t\tpropName={'decayPrecision'}\r\n\t\t\t\t\t\tpropLabel={'D Precision'}\r\n\t\t\t\t\t\tpropValue={this.state.decayPrecision}\r\n\t\t\t\t\t\tpropMin={0}\r\n\t\t\t\t\t\tpropMax={100}\r\n\t\t\t\t\t\tfieldChange={this.handleFormChange}\r\n\t\t\t\t\t\tformSubmit={this.handleFormSubmission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input className='reset-button' type='submit' value='Reset' />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n\tnodes: state.nodes,\r\n\tleaves: state.leaves\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateSettings: settingsObj => dispatch({ type: 'UPDATE_SETTINGS', settings: settingsObj }),\r\n\treset: () => dispatch({ type: 'RESET' }),\r\n\tcreateRoot: () => dispatch({ type: 'CREATE_ROOT' }),\r\n\tcreateNodes: () => dispatch({ type: 'CREATE_NODES' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SettingsForm)\r\n","import React, { Component } from 'react'\r\n\r\nclass InputField extends Component {\r\n\trender() {\r\n\t\tlet { propName, propLabel, propValue, propMin, propMax, fieldChange, formSubmit } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='settings-controllers'>\r\n\t\t\t\t<label className='controller-label'>{propLabel}</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue[0]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 0)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='slidersHalf'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue[0]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 0)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='slidersHalf'\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tid={propName + 'Slider'}\r\n\t\t\t\t\tmin={propMin}\r\n\t\t\t\t\tmax={propMax}\r\n\t\t\t\t\tvalue={propValue[1]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 1)}\r\n\t\t\t\t\tonMouseUp={e => formSubmit(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='text-fields'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tid={propName}\r\n\t\t\t\t\tvalue={propValue[1]}\r\n\t\t\t\t\tonChange={e => fieldChange(e.target.value, propName, 1)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default InputField\r\n","function totalizeAngleRange(angleArr) {\r\n\tlet totalAngleArr = angleArr.map((currentRangeArr, index) => {\r\n\t\treturn currentRangeArr[1] - currentRangeArr[0]\r\n\t})\r\n\tlet totalAngle = totalAngleArr.reduce((partial_sum, a) => partial_sum + a)\r\n\treturn totalAngle\r\n}\r\n\r\nfunction angleSpread(arrayToSpread, rangeToSpread, arrayToSpreadOver, parentAngle) {\r\n\tlet rangeToSpreadOver = totalizeAngleRange(arrayToSpreadOver)\r\n\tlet numberOfRanges = arrayToSpreadOver.length\r\n\tlet emptySpace = rangeToSpreadOver - rangeToSpread\r\n\tlet spaceBetween\r\n\r\n\tif (emptySpace < 0) {\r\n\t\temptySpace = 0\r\n\t}\r\n\tif (arrayToSpread.length === 0) {\r\n\t\tspaceBetween = 0\r\n\t} else {\r\n\t\tspaceBetween = degToRad(emptySpace / (arrayToSpread.length * 2))\r\n\t}\r\n\r\n\t// console.log(rangeToSpread, 'spread over', rangeToSpreadOver)\r\n\t// console.log(emptySpace, '/', arrayToSpread.length, '* 2 =', radToDeg(spaceBetween))\r\n\t// console.log(arrayToSpread)\r\n\r\n\tlet cummAngle = degToRad(arrayToSpreadOver[0][0])\r\n\tlet rangeNumber = 0\r\n\tlet resultArray = []\r\n\tlet initialArray = arrayToSpread\r\n\tlet initSpreadArray = []\r\n\tfor (var i = 0; i < arrayToSpreadOver.length; i++) {\r\n\t\t// console.log('begining of loop')\r\n\t\tinitSpreadArray = shiftEntireArray(initialArray, arrayToSpreadOver, i)\r\n\t\t// console.log('initSpreadArray', initSpreadArray)\r\n\t\tfor (var j = 0; j < initialArray.length; j++) {\r\n\t\t\tlet newEl = Object.assign({}, initSpreadArray[j])\r\n\t\t\t// console.log('newEl', newEl)\r\n\t\t\t// console.log('spacebetween', radToDeg(spaceBetween))\r\n\t\t\tlet tempAngle = newEl.angle + (2 * j + 1) * spaceBetween\r\n\t\t\trangeNumber = findMatchingRange(arrayToSpreadOver, radToDeg(tempAngle))\r\n\t\t\t// console.log('tempAngle', radToDeg(tempAngle), 'rangeNumber', rangeNumber)\r\n\t\t\tif (rangeNumber === -1) {\r\n\t\t\t\t// console.log('skip this element', newEl.id)\r\n\t\t\t\tbreak\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\r\n\t\t\t\t// \t'tempAngle',\r\n\t\t\t\t// \tradToDeg(tempAngle),\r\n\t\t\t\t// \t'max',\r\n\t\t\t\t// \tarrayToSpreadOver[rangeNumber][1],\r\n\t\t\t\t// \t'rangeNumber',\r\n\t\t\t\t// \trangeNumber\r\n\t\t\t\t// )\r\n\t\t\t\tnewEl.angle = tempAngle\r\n\t\t\t\t// console.log(newEl)\r\n\t\t\t\tresultArray.push(newEl)\r\n\t\t\t\tinitialArray.splice(0, j)\r\n\t\t\t\t// console.log('resultArray', resultArray)\r\n\t\t\t\t// console.log('initialArray', initialArray)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet filteredArray = resultArray.filter(function(el) {\r\n\t\treturn el != null\r\n\t})\r\n\r\n\tlet finalPositionedArray = filteredArray.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(parentAngle)\r\n\t\treturn newEl\r\n\t})\r\n\treturn finalPositionedArray\r\n}\r\n\r\nfunction shiftEntireArray(arrayToShift, refArr, i) {\r\n\treturn arrayToShift.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.angle += degToRad(refArr[i][0])\r\n\t\t// console.log(radToDeg(el.angle), '+', refArr[i][0], '-->', radToDeg(newEl.angle))\r\n\t\treturn newEl\r\n\t})\r\n}\r\n\r\nfunction findMatchingRange(ranges, checkValue) {\r\n\tfunction checkRange(range) {\r\n\t\t// console.log('checkValue', checkValue, 'range[0]', range[0], 'range[1]', range[1])\r\n\t\treturn checkValue >= range[0] && checkValue <= range[1]\r\n\t}\r\n\treturn ranges.findIndex(checkRange)\r\n}\r\n\r\nfunction radToDeg(angle) {\r\n\treturn Math.round((angle * 180) / Math.PI)\r\n}\r\n\r\nfunction degToRad(angle) {\r\n\treturn Math.round((angle * Math.PI * 100) / 180) / 100\r\n}\r\n\r\nexport { totalizeAngleRange, angleSpread, degToRad, radToDeg }\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { totalizeAngleRange, angleSpread, degToRad, radToDeg } from '../utils/angleFunctions'\r\n\r\nclass RangeHandlebars extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\t// Initial state based on props and new parameters\r\n\t\tthis.state = {\r\n\t\t\tangleRange: this.props.settings.angleRange,\r\n\t\t\tradius: parseFloat(this.props.radius),\r\n\t\t\thandle: {\r\n\t\t\t\theight: 3\r\n\t\t\t},\r\n\t\t\thover: false,\r\n\t\t\tdragging: false,\r\n\t\t\tid: this.props.id,\r\n\t\t\tminMax: this.props.minMax\r\n\t\t}\r\n\t\t// Initialize deg and rad angles\r\n\t\t// hardcoded center based on bottom left controller + 10px padding\r\n\t\t// --- todo: make this flexible and based on position of parent getBoundingClientRect()\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tcenter: {\r\n\t\t\t\tcx: 10 + parseFloat(this.props.radius),\r\n\t\t\t\tcy: -10 + this.props.viewportDims.height - this.props.radius\r\n\t\t\t},\r\n\t\t\tangle: this.fromRangeToAngle()\r\n\t\t}\r\n\t\t// Calculate position of each handlebar\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tpos: {\r\n\t\t\t\tx: parseFloat(this.state.radius),\r\n\t\t\t\ty: parseFloat(this.state.radius)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Bind mouse event functions\r\n\t\tthis.onMouseDown = this.onMouseDown.bind(this)\r\n\t\tthis.onMouseUp = this.onMouseUp.bind(this)\r\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\r\n\t\tthis.fromRangeToAngle = this.fromRangeToAngle.bind(this)\r\n\t\tthis.fromAngleToRange = this.fromAngleToRange.bind(this)\r\n\t\tthis.updateStates = this.updateStates.bind(this)\r\n\t}\r\n\r\n\tcomponentDidUpdate(props, state) {\r\n\t\tif (this.state.dragging && !state.dragging) {\r\n\t\t\tdocument.addEventListener('mousemove', this.onMouseMove)\r\n\t\t\tdocument.addEventListener('mouseup', this.onMouseUp)\r\n\t\t} else if (!this.state.dragging && state.dragging) {\r\n\t\t\tdocument.removeEventListener('mousemove', this.onMouseMove)\r\n\t\t\tdocument.removeEventListener('mouseup', this.onMouseUp)\r\n\t\t}\r\n\t}\r\n\r\n\tfromRangeToAngle = () => {\r\n\t\treturn {\r\n\t\t\tdeg: parseFloat(this.props.angle),\r\n\t\t\trad: degToRad(parseFloat(this.props.angle))\r\n\t\t}\r\n\t}\r\n\r\n\tfromAngleToRange = () => {\r\n\t\tlet newRanges = this.state.angleRange\r\n\t\tnewRanges[parseFloat(this.state.id[0])][parseFloat(this.state.id[1])] = this.state.angle.deg\r\n\t\tthis.setState({ angleRange: newRanges })\r\n\t}\r\n\r\n\ttoggleHover = () => {\r\n\t\tthis.setState({ hover: !this.state.hover })\r\n\t}\r\n\r\n\t// calculate relative position to the mouse and set dragging=true\r\n\tonMouseDown = e => {\r\n\t\tif (e.button !== 0) return\r\n\t\tthis.setState({\r\n\t\t\tdragging: true\r\n\t\t})\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tonMouseUp = e => {\r\n\t\tthis.setState({ dragging: false, mouseQuad: 0 })\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t\t// todo: trigger dispatch action here with settings updated with new angleRange\r\n\t}\r\n\r\n\tonMouseMove = e => {\r\n\t\tif (!this.state.dragging) return\r\n\t\tlet deltaY = e.pageY - this.state.center.cy\r\n\t\tlet deltaX = e.pageX - this.state.center.cx\r\n\t\tlet newAngleInRad = Math.atan(deltaY / deltaX)\r\n\t\tif (deltaX < 0 && deltaY < 0) {\r\n\t\t\t// Top left Quadrant\r\n\t\t\tnewAngleInRad -= Math.PI\r\n\t\t} else if (deltaX < 0 && deltaY > 0) {\r\n\t\t\t// Bottom left Quadrant\r\n\t\t\tnewAngleInRad += Math.PI\r\n\t\t}\r\n\t\tif (newAngleInRad <= this.state.minMax.min) {\r\n\t\t\tnewAngleInRad = this.state.minMax.min\r\n\t\t}\r\n\t\tif (newAngleInRad >= this.state.minMax.max) {\r\n\t\t\tnewAngleInRad = this.state.minMax.max\r\n\t\t}\r\n\t\tif (Math.abs(this.state.angle.rad - newAngleInRad) > Math.PI / 4) {\r\n\t\t\tnewAngleInRad = this.state.angle.rad\r\n\t\t}\r\n\t\tthis.updateStates(newAngleInRad)\r\n\t\te.stopPropagation()\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tupdateStates = ang => {\r\n\t\tthis.setState({\r\n\t\t\tangle: {\r\n\t\t\t\tdeg: radToDeg(ang),\r\n\t\t\t\trad: ang\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fromAngleToRange()\r\n\t\tthis.props.handleChange(this.state.angleRange, 'angleRange', this.state.id)\r\n\t\tthis.setState({ minMax: this.props.minMax })\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet componentClasses = ['handlebars']\r\n\t\tif (this.state.hover) {\r\n\t\t\tcomponentClasses += 'hover'\r\n\t\t}\r\n\t\tlet styles = {\r\n\t\t\tposition: 'absolute',\r\n\t\t\theight: `${this.state.handle.height}px`,\r\n\t\t\twidth: this.state.radius,\r\n\t\t\tleft: `${this.state.pos.x}px`,\r\n\t\t\ttop: `${this.state.pos.y}px`,\r\n\t\t\ttransform: `rotate(${this.state.angle.deg}deg)`,\r\n\t\t\ttransformOrigin: `0px`,\r\n\t\t\tborderRadius: '5px',\r\n\t\t\ttextAlign: 'end',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'flex-end',\r\n\t\t\tpaddingRight: '5px'\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={styles}\r\n\t\t\t\tclassName={componentClasses}\r\n\t\t\t\tonMouseEnter={this.toggleHover}\r\n\t\t\t\tonMouseLeave={this.toggleHover}\r\n\t\t\t\tonMouseDown={this.onMouseDown}>\r\n\t\t\t\t<FontAwesomeIcon icon={faCaretUp} />\r\n\t\t\t\t<FontAwesomeIcon icon={faCaretDown} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n\tviewportDims: state.viewportDims\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(RangeHandlebars)\r\n","function flatten(arr, val) {\r\n\treturn arr.reduce((acc, val) => acc.concat(val), [])\r\n}\r\n\r\nfunction pluck (arr, key) {\r\n\treturn arr.map(function(item) { return item[key]; });\r\n}\r\n\r\nexport { flatten, pluck }\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PieChart from 'react-minimal-pie-chart'\r\nimport RangeHandlebars from './RangeHandlebars'\r\nimport { totalizeAngleRange, angleSpread, degToRad, radToDeg } from '../utils/angleFunctions'\r\nimport { flatten } from '../utils/arrayFunctions'\r\n\r\nclass RadialControl extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tangleRange: this.props.settings.angleRange,\r\n\t\t\tmaxAngleRanges: this.props.settings.maxAngleRanges,\r\n\t\t\tradius: this.props.radius\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\t...this.state,\r\n\t\t\tminMax: this.calcAllMinMax(),\r\n\t\t\tpad: 10\r\n\t\t}\r\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\r\n\t\tthis.calcAllMinMax = this.calcAllMinMax.bind(this)\r\n\t\tthis.createPieData = this.createPieData.bind(this)\r\n\t}\r\n\r\n\thandleFormChange = (value, targetProp, i) => {\r\n\t\tthis.setState({ [targetProp]: value })\r\n\t\tthis.setState({ minMax: this.calcAllMinMax() })\r\n\t}\r\n\r\n\tcalcAllMinMax = () => {\r\n\t\tlet flatArr = flatten(this.state.angleRange)\r\n\t\tlet boundArr = flatten([-180, flatArr, 180])\r\n\t\tlet mmArr = boundArr.map((currentValue, currentIndex) => {\r\n\t\t\tif (currentIndex === 0 || currentIndex === boundArr.length - 1) return {}\r\n\t\t\tlet prevIndex = currentIndex - 1\r\n\t\t\tlet nextIndex = currentIndex + 1\r\n\t\t\tlet key = Math.floor((currentIndex - 1) / 2) + '' + ((currentIndex - 1) % 2)\r\n\t\t\treturn {\r\n\t\t\t\t[key]: {\r\n\t\t\t\t\tmin: degToRad(boundArr[prevIndex] + this.state.pad),\r\n\t\t\t\t\tmax: degToRad(boundArr[nextIndex] - this.state.pad)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Object.assign({}, ...mmArr)\r\n\t}\r\n\r\n\tcreatePieData = (arr, initial) => {\r\n\t\treturn flatten(\r\n\t\tarr.map((currentRange, i, allRanges) => {\r\n\t\t\tlet nextRangeStart = 0\r\n\t\t\tif (i >= allRanges.length - 1) {\r\n\t\t\t\tnextRangeStart = initial + 360\r\n\t\t\t} else {\r\n\t\t\t\tnextRangeStart = allRanges[i + 1][0]\r\n\t\t\t}\r\n\t\t\tlet sectionData = {\r\n\t\t\t\ttitle: `${i}`,\r\n\t\t\t\tvalue: (parseFloat(currentRange[1]) % 360) - (parseFloat(currentRange[0]) % 360),\r\n\t\t\t\tcolor: `rgba(210, 77, 87, 0.7)`\r\n\t\t\t}\r\n\t\t\tlet emptyValue = nextRangeStart - (parseFloat(currentRange[1]) % 360)\r\n\t\t\tlet emptySectionData = {\r\n\t\t\t\ttitle: `blank${i}`,\r\n\t\t\t\tvalue: emptyValue,\r\n\t\t\t\tcolor: emptyValue <= this.state.pad ? `rgba(255,255,255,0.8)` : `rgba(0,0,0,0.2)`,\r\n\t\t\t}\r\n\t\t\treturn [sectionData, emptySectionData]\r\n\t\t})\r\n\t)}\r\n\r\n\trender() {\r\n\t\tlet angleRanges = this.state.angleRange\r\n\t\tlet initAngle = Math.min(...angleRanges[0])\r\n\t\tlet controllerRadius = this.state.radius\r\n\t\treturn (\r\n\t\t\t<div className='radial-controller'>\r\n\t\t\t\t{angleRanges.map((currentRange, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='rangeHandlebars' key={i}>\r\n\t\t\t\t\t\t\t<RangeHandlebars\r\n\t\t\t\t\t\t\t\tradius={controllerRadius}\r\n\t\t\t\t\t\t\t\tangle={parseFloat(currentRange[0]) % 360}\r\n\t\t\t\t\t\t\t\tminMax={this.state.minMax[i + '0']}\r\n\t\t\t\t\t\t\t\tid={i + '0'}\r\n\t\t\t\t\t\t\t\thandleChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RangeHandlebars\r\n\t\t\t\t\t\t\t\tradius={controllerRadius}\r\n\t\t\t\t\t\t\t\tangle={parseFloat(currentRange[1]) % 360}\r\n\t\t\t\t\t\t\t\tminMax={this.state.minMax[i + '1']}\r\n\t\t\t\t\t\t\t\tid={i + '1'}\r\n\t\t\t\t\t\t\t\thandleChange={this.handleFormChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\t<PieChart\r\n\t\t\t\t\tdata={this.createPieData(angleRanges, initAngle)}\r\n\t\t\t\t\tstyle={{ width: `${controllerRadius * 2}px`}}\r\n\t\t\t\t\tsegmentsStyle={{ transition: 'stroke .3s' }}\r\n\t\t\t\t\tstartAngle={parseFloat(angleRanges[0][0]) % 360}\r\n\t\t\t\t\ttotalValue={360}\r\n\t\t\t\t\tlineWidth={42}\r\n\t\t\t\t\tradius={42}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsettings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateSettings: settingsObj => dispatch({ type: 'UPDATE_SETTINGS', settings: settingsObj }),\r\n\treset: () => dispatch({ type: 'RESET' })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(RadialControl)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ObstacleContainer extends Component {\r\n\r\n\trender() {\r\n\t\tconsole.log('zoom', this.props.stage.zoom)\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\twidth: this.props.viewportDims.width,\r\n\t\t\t\t\theight: this.props.viewportDims.height\r\n\t\t\t\t}}>\r\n\t\t\t\t{this.props.obstacles.map((currentObstacle, i) => {\r\n\t\t\t\t\tconst styles = {\r\n\t\t\t\t\t\twidth: currentObstacle[2].x-currentObstacle[0].x,\r\n\t\t\t\t\t\theight: currentObstacle[2].y-currentObstacle[0].y,\r\n\t\t\t\t\t\tleft: currentObstacle[0].x,\r\n\t\t\t\t\t\ttop: currentObstacle[0].y,\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tposition: 'absolute'\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <div style={styles} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tsettings: state.settings,\r\n\tobstacles: state.obstacles,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ObstacleContainer)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../styles/App.css'\r\nimport Canvas from '../containers/Canvas'\r\nimport ShapeContainer from '../containers/ShapeContainer'\r\nimport SettingsForm from './SettingsForm'\r\nimport RadialControl from './RadialControl'\r\nimport ObstacleContainer from '../containers/ObstacleContainer'\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = this.props.viewportDims\r\n\t\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this)\r\n\t\tconsole.log('viewport', this.state)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateWindowDimensions()\r\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\r\n\t}\r\n\r\n\tupdateWindowDimensions() {\r\n\t\tthis.setState({ width: window.innerWidth, height: window.innerHeight })\r\n\t\tthis.props.updateViewport(this.state)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<header className='App-header'>\r\n\t\t\t\t\t<div className='stage' style={{ transform: `scale(${this.props.stage.zoom})`, position: 'relative' }}>\r\n\t\t\t\t\t\t<ShapeContainer />\r\n\t\t\t\t\t\t{/* <ObstacleContainer /> */}\r\n\t\t\t\t\t\t{/* <Canvas /> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<RadialControl radius={0.08 * this.state.width} />\r\n\t\t\t\t\t<SettingsForm />\r\n\t\t\t\t</header>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tviewportDims: state.viewportDims,\r\n\tstage: state.stage\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateViewport: viewportObj => dispatch({ type: 'UPDATE_VIEWPORT', viewportDims: viewportObj })\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App)\r\n","function randomSpread(originalValue, percentOfOriginal, precision, spread, direction) {\r\n\t// percentOfOriginal= % of originalValue\r\n\t// precision= 0%:least precise, 100%:most precise\r\n\t// originalValue: starting value\r\n\t// spread= range as % of originalValue to randomize around\r\n\t// direction= 2: centered around percentOfOriginal. 1:Positive bias. -1:negative bias\r\n\tlet range = originalValue * (percentOfOriginal / 100) * (spread / 100)\r\n\tlet randomizer = 0\r\n\r\n\tif (direction === 2) {\r\n\t\trandomizer = Math.random() - Math.random()\r\n\t} else if (direction === 1 || direction === -1) {\r\n\t\trandomizer = direction * Math.abs(Math.random() - Math.random())\r\n\t} else {\r\n\t\tdirection = -1\r\n\t}\r\n\treturn (percentOfOriginal / 100) * originalValue + (randomizer * range * (100 - precision)) / 100\r\n}\r\n\r\nexport default randomSpread\r\n","import { totalizeAngleRange, angleSpread, degToRad, radToDeg } from './angleFunctions'\r\nimport { flatten } from './arrayFunctions'\r\nimport randomSpread from './randomSpread'\r\n\r\n// ~~~~~~~~~~~ CREATE FRAGMENTED ARRAY ~~~~~~~~~~~~~~~//\r\nfunction createFragmentedArray(parentsArr, settings) {\r\n\tvar allChildrenArray = parentsArr.map((currentParent, index) => {\r\n\t\treturn distributeParentValue(currentParent, settings)\r\n\t})\r\n\tallChildrenArray = flatten(allChildrenArray)\r\n\treturn allChildrenArray\r\n}\r\n\r\n// ~~~~~~~~~~~~~~ DISTRIBUTE VALUE ~~~~~~~~~~~~~~~~~~~//\r\nfunction distributeParentValue(parent, settings) {\r\n\tlet mySize = 0\r\n\tlet myAngle = 0\r\n\tlet myDistance = parent.radius + 10 // Adjust this to move children off of circumferance\r\n\tlet currentChildrenArray = []\r\n\tlet siblingCounter = 0\r\n\r\n\tlet minAngle = Math.atan(settings.minSize / myDistance)\r\n\tlet remainder = randomSpread(parent.radius, settings.multiplier, settings.multiplierPrecision, 50, 2)\r\n\r\n\tif (parent.radius <= settings.minSize || parent.id.length === 40) {\r\n\t\treturn currentChildrenArray\r\n\t} else {\r\n\t\twhile (remainder >= settings.minSize) {\r\n\t\t\tmySize = randomSpread(remainder * Math.random(), settings.decay, settings.decayPrecision, 100, 2)\r\n\t\t\t// mySize = Math.trunc(remainder * Math.random() * 1000) / 1000\r\n\t\t\tlet tempAngle = Math.atan(mySize / myDistance)\r\n\t\t\tremainder -= mySize\r\n\t\t\tif (mySize >= settings.minSize) {\r\n\t\t\t\t// retotalizer += mySize\r\n\t\t\t\tmyAngle += tempAngle // Find my center\r\n\t\t\t\tcurrentChildrenArray.push({\r\n\t\t\t\t\tid: parent.id + '' + siblingCounter,\r\n\t\t\t\t\tradius: mySize,\r\n\t\t\t\t\tdistance: myDistance,\r\n\t\t\t\t\tcoordX: parent.coordX,\r\n\t\t\t\t\tcoordY: parent.coordY,\r\n\t\t\t\t\tangle: myAngle,\r\n\t\t\t\t\tcolor: `210, ${mySize*20}, ${mySize*40}` // rgb values\r\n\t\t\t\t})\r\n\t\t\t\tsiblingCounter += 1\r\n\t\t\t\tmyAngle += tempAngle // Setup for next center\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Spread Angle of children over angle range\r\n\tlet distributedChildrenArray = angleSpread(\r\n\t\tcurrentChildrenArray,\r\n\t\tMath.abs(radToDeg(myAngle)),\r\n\t\tsettings.angleRange,\r\n\t\tradToDeg(parent.angle) % 360\r\n\t)\r\n\r\n\tlet positionedChildrenArray = distributedChildrenArray.map((el, index) => {\r\n\t\tlet newEl = Object.assign({}, el)\r\n\t\tnewEl.coordX = newEl.coordX + newEl.distance * Math.cos(newEl.angle)\r\n\t\tnewEl.coordY = newEl.coordY + newEl.distance * Math.sin(newEl.angle)\r\n\t\treturn newEl\r\n\t})\r\n\r\n\treturn positionedChildrenArray\r\n}\r\n\r\nexport default createFragmentedArray\r\n\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// Offline Tests:\r\n\r\nwindow.offlineTest = offlineTest\r\nfunction offlineTest() {\r\n\tlet testRoot = [\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tradius: 200,\r\n\t\t\tcoordX: 900 / 2,\r\n\t\t\tcoordY: 900 / 2,\r\n\t\t\tangle: 0\r\n\t\t}\r\n\t]\r\n\r\n\tlet testSettings = {\r\n\t\tangleRange: [[-100, -70], [-45, 45], [70, 100]], // Range: -180 to 180\r\n\t\tmaxAngleRanges: 4,\r\n\t\tminSize: 1,\r\n\t\tmultiplier: 130,\r\n\t\tmultiplierPrecision: 40, // Higher Levels, precision -> 100%\r\n\t\tdecay: 90,\r\n\t\tdecayPrecision: 40 // Higher Levels, precision -> 100%\r\n\t}\r\n\tlet newNodes = testRoot\r\n\tlet newLeaves = newNodes\r\n\tconsole.time('fragArray')\r\n\tfor (var i = 0; i < 50; i++) {\r\n\t\tnewLeaves = createFragmentedArray(newLeaves, testSettings)\r\n\t\tArray.prototype.push.apply(newNodes, newLeaves)\r\n\t\t// console.log('nodes',newNodes)\r\n\t\t// console.log('leaves',newLeaves)\r\n\t\tif (newLeaves.length === 0 || newLeaves.length > 20000) break\r\n\t}\r\n\tconsole.timeEnd('fragArray')\r\n\tconsole.log(newNodes.length)\r\n\twindow.newNodes = newNodes\r\n\t// const intId = setInterval(() => {\r\n\t// \tlet result = createFragmentedArray(testLeaves,testSettings)\r\n\t// \tconsole.log(result)\r\n\t// }, 50)\r\n\t// setTimeout(() => {\r\n\t// \tclearInterval(intId)\r\n\t// }, 10000)\r\n}\r\n","import { pluck } from '../utils/arrayFunctions'\r\n\r\nfunction calcNewZoom(leaves, stage, viewport) {\r\n\tlet allX = pluck(leaves, 'coordX')\r\n\tlet allY = pluck(leaves, 'coordY')\r\n\r\n\tlet maxX = Math.max(...allX, stage.x.max)\r\n\tlet minX = Math.min(...allX, stage.x.min)\r\n\tlet maxY = Math.max(...allY, stage.y.max)\r\n\tlet minY = Math.min(...allY, stage.y.min)\r\n\r\n\tlet deltaX = Math.max(Math.abs(minX), maxX - stage.x.max)\r\n\tlet deltaY = Math.max(Math.abs(minY), maxY - stage.y.max)\r\n\r\n\tlet newStage = {\r\n\t\tx: {\r\n\t\t\tmin: -deltaX,\r\n\t\t\tmax: viewport.width + deltaX\r\n\t\t},\r\n\t\ty: {\r\n\t\t\tmin: -deltaY,\r\n\t\t\tmax: viewport.height + deltaY\r\n\t\t},\r\n\t\tzoom: Math.trunc(10000 * 0.9 / Math.max(1 + (2 * deltaX) / viewport.width, 1 + (2 * deltaY) / viewport.height))/10000\r\n\t}\r\n\r\n\treturn newStage\r\n}\r\n\r\nexport default calcNewZoom\r\n","import { pluck } from '../utils/arrayFunctions'\r\n\r\nfunction doLeavesIntersectObstacles(leaves, obstacles) {\r\n\tlet leavX = pluck(leaves, 'coordX')\r\n    let leavY = pluck(leaves, 'coordY')\r\n    let leavR = pluck(leaves, 'radii')\r\n    \r\n    // let obstSegments = \r\n\r\n\t// let maxX = Math.max(...allX, stage.x.max)\r\n\t// let minX = Math.min(...allX, stage.x.min)\r\n\t// let maxY = Math.max(...allY, stage.y.max)\r\n\t// let minY = Math.min(...allY, stage.y.min)\r\n\r\n\t// let deltaX = Math.max(Math.abs(minX), maxX - stage.x.max)\r\n\t// let deltaY = Math.max(Math.abs(minY), maxY - stage.y.max)\r\n\r\n\t// let newStage = {\r\n\t// \tx: {\r\n\t// \t\tmin: -deltaX,\r\n\t// \t\tmax: viewport.width + deltaX\r\n\t// \t},\r\n\t// \ty: {\r\n\t// \t\tmin: -deltaY,\r\n\t// \t\tmax: viewport.height + deltaY\r\n\t// \t},\r\n\t// \tzoom:\r\n\t// \t\tMath.trunc((10000 * 0.9) / Math.max(1 + (2 * deltaX) / viewport.width, 1 + (2 * deltaY) / viewport.height)) /\r\n\t// \t\t10000\r\n\t// }\r\n\r\n\t// return newStage\r\n}\r\n\r\nfunction doesCircleIntersectSegment(center, radius, vertex1, vertex2) {\r\n\t// Check if vertices are in the circle, then check if distance is within radius\r\n\tif (distanceBetweenPoints(center, vertex1) <= radius || distanceBetweenPoints(center, vertex2) <= radius) {\r\n\t\treturn true\r\n\t} else if (distanceToSegment(center, vertex1, vertex2) <= radius) {\r\n\t\treturn true\r\n\t} else {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nfunction distanceBetweenPoints(point1, point2) {\r\n\treturn Math.sqrt(sqr(point2.x - point1.x) + sqr(point2.y - point1.y))\r\n}\r\n\r\nfunction distanceToSegment(center, vertex1, vertex2) {\r\n\t// center, vertex1, & vertex2 as objects: {x: ..., y: ...}\r\n\tconst x = center.x\r\n\tconst y = center.y\r\n\tconst x1 = vertex1.x\r\n\tconst y1 = vertex1.y\r\n\tconst x2 = vertex2.x\r\n\tconst y2 = vertex2.y\r\n\r\n\tvar A = x - x1\r\n\tvar B = y - y1\r\n\tvar C = x2 - x1\r\n\tvar D = y2 - y1\r\n\r\n\tvar dot = A * C + B * D\r\n\tvar len_sq = sqr(C) + sqr(D)\r\n\tvar param = -1\r\n\tif (len_sq != 0)\r\n\t\t//in case of 0 length line\r\n\t\tparam = dot / len_sq\r\n\r\n\tvar xx, yy\r\n\r\n\tif (param < 0) {\r\n\t\txx = x1\r\n\t\tyy = y1\r\n\t} else if (param > 1) {\r\n\t\txx = x2\r\n\t\tyy = y2\r\n\t} else {\r\n\t\txx = x1 + param * C\r\n\t\tyy = y1 + param * D\r\n\t}\r\n\r\n\tvar dx = x - xx\r\n\tvar dy = y - yy\r\n\treturn Math.sqrt(sqr(dx) + sqr(dy))\r\n}\r\n\r\nfunction sqr(x) {\r\n\treturn x * x\r\n}\r\n\r\nexport default doesCircleIntersectSegment\r\n","import createFragmentedArray from '../utils/fragment'\r\nimport calcNewZoom from '../utils/stageSetup'\r\nimport doesCircleIntersectSegment from '../utils/collisions'\r\n\r\n// This reducer references/holds the main store\r\n// It modifies the main state of the app\r\n\r\nconst initialState = {\r\n\tviewportDims: { width: window.innerWidth, height: window.innerHeight },\r\n\tstage: { x: { min: 0, max: window.innerWidth }, y: { min: 0, max: window.innerHeight }, zoom: 1 },\r\n\tsettings: {\r\n\t\tangleRange: [[-100, -70], [-45, 45], [70, 100]], // Range: -180 to 180\r\n\t\tmaxAngleRanges: 4,\r\n\t\tminSize: 1,\r\n\t\tmultiplier: 130,\r\n\t\tmultiplierPrecision: 80, // Higher Levels, precision -> 100%\r\n\t\tdecay: 90,\r\n\t\tdecayPrecision: 40 // Higher Levels, precision -> 100%\r\n\t},\r\n\tnodes: [],\r\n\tleaves: [],\r\n\tobstacles: [\r\n\t\t[{ x: 0, y: 0 }, { x: window.innerWidth, y: 0 }, { x: window.innerWidth, y: 50 }, { x: 0, y: 50 }],\r\n\t\t[{ x: window.innerWidth-50, y: 200 }, { x: window.innerWidth, y: 200 }, { x: window.innerWidth, y: 600 }, { x: window.innerWidth-50, y: 600 }]\r\n\t] // Draw obstacles clockwise\r\n}\r\n\r\n\r\nconst shapeReducer = (state = initialState, action) => {\r\n\tvar newNodes = state.nodes.slice()\r\n\tvar newLeaves = state.leaves.slice()\r\n\tvar newSettings = { ...state.settings }\r\n\tvar newViewportDims = { ...state.viewportDims }\r\n\tvar newStage = state.stage\r\n\t// console.log('newStage', newStage)\r\n\tswitch (action.type) {\r\n\t\tcase 'RESET':\r\n\t\t\tvar defaultStage = { x: { min: 0, max: window.innerWidth }, y: { min: 0, max: window.innerHeight }, zoom: 1 }\r\n\t\t\treturn { ...state, nodes: [], leaves: [], stage: defaultStage }\r\n\t\tcase 'CREATE_ROOT':\r\n\t\t\tnewNodes = [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\tradius: 150,\r\n\t\t\t\t\tcoordX: state.viewportDims.width / 2,\r\n\t\t\t\t\tcoordY: state.viewportDims.height / 2,\r\n\t\t\t\t\tangle: 0,\r\n\t\t\t\t\tcolor: `210, ${150*20}, ${150*40}` // rgb values\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\tnewLeaves = newNodes\r\n\t\t\treturn { ...state, nodes: newNodes, leaves: newLeaves }\r\n\t\tcase 'CREATE_NODES':\r\n\t\t\t// console.log(state.nodes.length)\r\n\t\t\tnewLeaves = createFragmentedArray(newLeaves, newSettings)\r\n\t\t\tnewStage = calcNewZoom(newLeaves, state.stage, state.viewportDims)\r\n\t\t\t\r\n\t\t\tArray.prototype.push.apply(newNodes, newLeaves)\r\n\t\t\treturn { ...state, nodes: newNodes, leaves: newLeaves, stage: newStage }\r\n\t\tcase 'UPDATE_SETTINGS':\r\n\t\t\tnewSettings = action.settings\r\n\t\t\t// console.log(newSettings)\r\n\t\t\treturn { ...state, settings: newSettings }\r\n\t\tcase 'UPDATE_VIEWPORT':\r\n\t\t\tnewViewportDims = action.viewportDims\r\n\t\t\treturn { ...state, viewportDims: newViewportDims }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default shapeReducer\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.css'\r\nimport App from './components/App'\r\nimport shapeReducer from './reducers/shapeReducer'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(shapeReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n// store.subscribe(() => {\r\n//     if (store.getState().leaves.length > 0){\r\n//         console.log(store.getState().leaves)\r\n//         store.dispatch({ type: 'CREATE_NODES' })\r\n//     }\r\n// })\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}